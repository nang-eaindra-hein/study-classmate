{"ast":null,"code":"var _jsxFileName = \"/Users/nangeaindrahein/study-classmate/client/src/pages/PlayPage.js\",\n  _s = $RefreshSig$();\n// client/src/pages/PlayPage.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// NOTE: we’re not importing PlayPage.css so all header styles are inline now\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = 'https://study-classmate-server.onrender.com';\nexport default function PlayPage() {\n  _s();\n  const navigate = useNavigate();\n  const TODAY = new Date().toDateString();\n  const username = localStorage.getItem('username');\n\n  // GENERAL\n  const [activeTab, setActiveTab] = useState('Play');\n  const [diamonds, setDiamonds] = useState(20);\n  const [scores, setScores] = useState([]);\n\n  // CARD SELECTION\n  const [mode, setMode] = useState('select');\n  const [cards, setCards] = useState([]);\n  const [count, setCount] = useState(5);\n  const [manualList, setManualList] = useState(Array.from({\n    length: 5\n  }, () => ({\n    word: '',\n    definition: ''\n  })));\n  const [loadingGen, setLoadingGen] = useState(false);\n\n  // QUIZ\n  const [quizCards, setQuizCards] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [timer, setTimer] = useState(15);\n  const timerRef = useRef(null);\n  const [guess, setGuess] = useState('');\n  const [results, setResults] = useState([]);\n\n  // MODALS\n  const [showSkipConfirm, setShowSkipConfirm] = useState(false);\n  const [showName, setShowName] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [sortBy, setSortBy] = useState('highest');\n\n  // Load initial game state\n  useEffect(() => {\n    fetch(`${API}/game-state?username=${username}`).then(r => r.json()).then(data => {\n      setDiamonds(data.diamonds);\n      setScores(data.scores);\n    }).catch(console.error);\n  }, [username]);\n\n  // Timer logic\n  const startTimer = () => {\n    clearInterval(timerRef.current);\n    setTimer(15);\n    timerRef.current = setInterval(() => {\n      setTimer(t => {\n        if (t <= 1) {\n          clearInterval(timerRef.current);\n          promptSkip(); // auto‐skip\n          return 15;\n        }\n        return t - 1;\n      });\n    }, 1000);\n  };\n\n  // Answer or skip\n  const handleAnswer = async (submitted, isSkip = false) => {\n    clearInterval(timerRef.current);\n    if (isSkip && diamonds < 10) {\n      return setShowSkipConfirm(true);\n    }\n    if (isSkip) {\n      const newD = diamonds - 10;\n      setDiamonds(newD);\n      await fetch(`${API}/update-diamonds`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          diamonds: newD\n        })\n      }).catch(console.error);\n    }\n    let correct = false;\n    if (!isSkip && submitted.trim()) {\n      correct = submitted.trim().toLowerCase() === quizCards[currentIndex].word.toLowerCase();\n    }\n    const updated = [...results, {\n      ...quizCards[currentIndex],\n      correct\n    }];\n    setResults(updated);\n    if (updated.length >= quizCards.length) {\n      setShowName(true);\n    } else {\n      setCurrentIndex(i => i + 1);\n      setGuess('');\n      startTimer();\n    }\n  };\n\n  // Skip helpers\n  const promptSkip = () => setShowSkipConfirm(true);\n  const confirmSkip = () => {\n    setShowSkipConfirm(false);\n    handleAnswer('', true);\n  };\n\n  // Generate via AI\n  const handleGenerate = async () => {\n    setLoadingGen(true);\n    try {\n      const setWords = new Set();\n      while (setWords.size < count) {\n        const r = await fetch(`${API}/generate-word`, {\n          method: 'POST'\n        });\n        const {\n          word\n        } = await r.json();\n        setWords.add(word);\n      }\n      const words = Array.from(setWords);\n      const defs = await Promise.all(words.map(async w => {\n        const res = await fetch(`${API}/define-word`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            word: w\n          })\n        });\n        const {\n          content\n        } = await res.json();\n        const head = content.split(/Example sentence/i)[0];\n        const m = head.match(/Definition:\\s*([^-\\n]+)/i);\n        return {\n          word: w,\n          definition: m ? m[1].trim() : head.trim()\n        };\n      }));\n      setCards(defs);\n      setMode('review');\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setLoadingGen(false);\n    }\n  };\n\n  // Manual review\n  const handleReviewManual = () => {\n    setCards(manualList.slice(0, count));\n    setMode('review');\n  };\n\n  // Start quiz\n  const handleStartQuiz = () => {\n    setQuizCards([...cards].sort(() => Math.random() - 0.5));\n    setResults([]);\n    setCurrentIndex(0);\n    startTimer();\n    setMode('quiz');\n  };\n\n  // Save score\n  const saveScore = async () => {\n    if (!playerName.trim()) return;\n    const correctCount = results.filter(r => r.correct).length;\n    const res = await fetch(`${API}/save-score`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        name: playerName,\n        score: correctCount\n      })\n    });\n    const {\n      scores: updated\n    } = await res.json();\n    setScores(updated);\n    setShowName(false);\n    setMode('select');\n    setPlayerName('');\n    if (localStorage.getItem('lastQuizDate') !== TODAY) {\n      localStorage.setItem('lastQuizDate', TODAY);\n      // bump streak\n      const r1 = await fetch(`${API}/get-streak?username=${username}`);\n      const {\n        streakDays\n      } = await r1.json();\n      await fetch(`${API}/save-streak`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          streakDays: (streakDays || 0) + 1\n        })\n      });\n    }\n  };\n\n  // Sort scores\n  const sorted = [...scores].sort((a, b) => {\n    if (sortBy === 'highest') return b.score - a.score;\n    if (sortBy === 'lowest') return a.score - b.score;\n    if (sortBy === 'earliest') return new Date(a.time) - new Date(b.time);\n    return new Date(b.time) - new Date(a.time);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      fontFamily: \"'Luckiest Guy', cursive\",\n      color: '#fff',\n      minHeight: '100vh',\n      backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages3.jpg)`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        height: '3rem',\n        padding: '0 1rem',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        background: 'rgba(0, 0, 0, 0.6)',\n        zIndex: 999\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => navigate('/home2'),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/photos/home.jpg`,\n          alt: \"Home\",\n          style: {\n            width: 32,\n            height: 32\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 0,\n          fontSize: '1.6rem',\n          color: '#4caf50'\n        },\n        children: \"Let\\u2019s Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '1rem'\n          },\n          children: [\"\\uD83D\\uDC8E \", diamonds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: '.3rem .8rem',\n            border: 'none',\n            borderRadius: 6,\n            background: '#4caf50',\n            color: '#fff',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n          },\n          onClick: () => setActiveTab(t => t === 'Play' ? 'Leaderboard' : 'Play'),\n          children: activeTab === 'Play' ? 'Leaderboard' : 'Back'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }, this), showSkipConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.6)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'rgba(255,255,255,0.2)',\n          backdropFilter: 'blur(8px)',\n          border: '1px solid rgba(255,255,255,0.4)',\n          color: '#fff',\n          padding: '1rem 2rem',\n          borderRadius: 8,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"To skip, use 10 diamonds.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '.5rem',\n            marginTop: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              flex: 1,\n              padding: '.5rem',\n              border: 'none',\n              borderRadius: 6,\n              background: 'rgba(255,255,255,0.3)',\n              color: '#000',\n              fontWeight: 'bold',\n              cursor: 'pointer'\n            },\n            onClick: confirmSkip,\n            children: \"Use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              flex: 1,\n              padding: '.5rem',\n              border: 'none',\n              borderRadius: 6,\n              background: 'rgba(255,255,255,0.3)',\n              color: '#000',\n              fontWeight: 'bold',\n              cursor: 'pointer'\n            },\n            onClick: () => setShowSkipConfirm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), showName && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.6)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          padding: '1.5rem 2rem',\n          borderRadius: 8,\n          textAlign: 'center',\n          maxWidth: '90%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", results.filter(r => r.correct).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your name\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value),\n          style: {\n            width: '100%',\n            boxSizing: 'border-box',\n            margin: '1rem 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: '.5rem 1rem',\n            border: 'none',\n            borderRadius: 6,\n            background: '#4caf50',\n            color: '#fff',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n          },\n          onClick: saveScore,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n_s(PlayPage, \"wI8ybyQ9afvrkaEREDU+eYQlTK0=\", false, function () {\n  return [useNavigate];\n});\n_c = PlayPage;\nvar _c;\n$RefreshReg$(_c, \"PlayPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","API","PlayPage","_s","navigate","TODAY","Date","toDateString","username","localStorage","getItem","activeTab","setActiveTab","diamonds","setDiamonds","scores","setScores","mode","setMode","cards","setCards","count","setCount","manualList","setManualList","Array","from","length","word","definition","loadingGen","setLoadingGen","quizCards","setQuizCards","currentIndex","setCurrentIndex","timer","setTimer","timerRef","guess","setGuess","results","setResults","showSkipConfirm","setShowSkipConfirm","showName","setShowName","playerName","setPlayerName","sortBy","setSortBy","fetch","then","r","json","data","catch","console","error","startTimer","clearInterval","current","setInterval","t","promptSkip","handleAnswer","submitted","isSkip","newD","method","headers","body","JSON","stringify","correct","trim","toLowerCase","updated","i","confirmSkip","handleGenerate","setWords","Set","size","add","words","defs","Promise","all","map","w","res","content","head","split","m","match","e","handleReviewManual","slice","handleStartQuiz","sort","Math","random","saveScore","correctCount","filter","name","score","setItem","r1","streakDays","sorted","a","b","time","style","position","fontFamily","color","minHeight","backgroundImage","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","display","flexDirection","children","top","left","right","height","padding","alignItems","justifyContent","background","zIndex","cursor","onClick","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","margin","fontSize","gap","border","borderRadius","fontWeight","bottom","backdropFilter","textAlign","marginTop","flex","maxWidth","placeholder","value","onChange","target","boxSizing","_c","$RefreshReg$"],"sources":["/Users/nangeaindrahein/study-classmate/client/src/pages/PlayPage.js"],"sourcesContent":["// client/src/pages/PlayPage.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// NOTE: we’re not importing PlayPage.css so all header styles are inline now\n\nconst API = 'https://study-classmate-server.onrender.com';\n\nexport default function PlayPage() {\n  const navigate = useNavigate();\n  const TODAY = new Date().toDateString();\n  const username = localStorage.getItem('username');\n\n  // GENERAL\n  const [activeTab, setActiveTab] = useState('Play');\n  const [diamonds, setDiamonds] = useState(20);\n  const [scores, setScores] = useState([]);\n\n  // CARD SELECTION\n  const [mode, setMode] = useState('select');\n  const [cards, setCards] = useState([]);\n  const [count, setCount] = useState(5);\n  const [manualList, setManualList] = useState(\n    Array.from({ length: 5 }, () => ({ word: '', definition: '' }))\n  );\n  const [loadingGen, setLoadingGen] = useState(false);\n\n  // QUIZ\n  const [quizCards, setQuizCards] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [timer, setTimer] = useState(15);\n  const timerRef = useRef(null);\n  const [guess, setGuess] = useState('');\n  const [results, setResults] = useState([]);\n\n  // MODALS\n  const [showSkipConfirm, setShowSkipConfirm] = useState(false);\n  const [showName, setShowName] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [sortBy, setSortBy] = useState('highest');\n\n  // Load initial game state\n  useEffect(() => {\n    fetch(`${API}/game-state?username=${username}`)\n      .then(r => r.json())\n      .then(data => {\n        setDiamonds(data.diamonds);\n        setScores(data.scores);\n      })\n      .catch(console.error);\n  }, [username]);\n\n  // Timer logic\n  const startTimer = () => {\n    clearInterval(timerRef.current);\n    setTimer(15);\n    timerRef.current = setInterval(() => {\n      setTimer(t => {\n        if (t <= 1) {\n          clearInterval(timerRef.current);\n          promptSkip(); // auto‐skip\n          return 15;\n        }\n        return t - 1;\n      });\n    }, 1000);\n  };\n\n  // Answer or skip\n  const handleAnswer = async (submitted, isSkip = false) => {\n    clearInterval(timerRef.current);\n\n    if (isSkip && diamonds < 10) {\n      return setShowSkipConfirm(true);\n    }\n    if (isSkip) {\n      const newD = diamonds - 10;\n      setDiamonds(newD);\n      await fetch(`${API}/update-diamonds`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, diamonds: newD }),\n      }).catch(console.error);\n    }\n\n    let correct = false;\n    if (!isSkip && submitted.trim()) {\n      correct =\n        submitted.trim().toLowerCase() ===\n        quizCards[currentIndex].word.toLowerCase();\n    }\n\n    const updated = [...results, { ...quizCards[currentIndex], correct }];\n    setResults(updated);\n\n    if (updated.length >= quizCards.length) {\n      setShowName(true);\n    } else {\n      setCurrentIndex(i => i + 1);\n      setGuess('');\n      startTimer();\n    }\n  };\n\n  // Skip helpers\n  const promptSkip = () => setShowSkipConfirm(true);\n  const confirmSkip = () => {\n    setShowSkipConfirm(false);\n    handleAnswer('', true);\n  };\n\n  // Generate via AI\n  const handleGenerate = async () => {\n    setLoadingGen(true);\n    try {\n      const setWords = new Set();\n      while (setWords.size < count) {\n        const r = await fetch(`${API}/generate-word`, { method: 'POST' });\n        const { word } = await r.json();\n        setWords.add(word);\n      }\n      const words = Array.from(setWords);\n      const defs = await Promise.all(\n        words.map(async w => {\n          const res = await fetch(`${API}/define-word`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ word: w }),\n          });\n          const { content } = await res.json();\n          const head = content.split(/Example sentence/i)[0];\n          const m = head.match(/Definition:\\s*([^-\\n]+)/i);\n          return { word: w, definition: m ? m[1].trim() : head.trim() };\n        })\n      );\n      setCards(defs);\n      setMode('review');\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setLoadingGen(false);\n    }\n  };\n\n  // Manual review\n  const handleReviewManual = () => {\n    setCards(manualList.slice(0, count));\n    setMode('review');\n  };\n\n  // Start quiz\n  const handleStartQuiz = () => {\n    setQuizCards([...cards].sort(() => Math.random() - 0.5));\n    setResults([]);\n    setCurrentIndex(0);\n    startTimer();\n    setMode('quiz');\n  };\n\n  // Save score\n  const saveScore = async () => {\n    if (!playerName.trim()) return;\n    const correctCount = results.filter(r => r.correct).length;\n    const res = await fetch(`${API}/save-score`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username,\n        name: playerName,\n        score: correctCount,\n      }),\n    });\n    const { scores: updated } = await res.json();\n    setScores(updated);\n    setShowName(false);\n    setMode('select');\n    setPlayerName('');\n\n    if (localStorage.getItem('lastQuizDate') !== TODAY) {\n      localStorage.setItem('lastQuizDate', TODAY);\n      // bump streak\n      const r1 = await fetch(`${API}/get-streak?username=${username}`);\n      const { streakDays } = await r1.json();\n      await fetch(`${API}/save-streak`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, streakDays: (streakDays || 0) + 1 }),\n      });\n    }\n  };\n\n  // Sort scores\n  const sorted = [...scores].sort((a, b) => {\n    if (sortBy === 'highest') return b.score - a.score;\n    if (sortBy === 'lowest') return a.score - b.score;\n    if (sortBy === 'earliest') return new Date(a.time) - new Date(b.time);\n    return new Date(b.time) - new Date(a.time);\n  });\n\n    return (\n        <div\n          style={{\n            position: 'relative',\n            fontFamily: \"'Luckiest Guy', cursive\",\n            color: '#fff',\n            minHeight: '100vh',\n            backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages3.jpg)`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          {/* HEADER */}\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              right: 0,\n              height: '3rem',\n              padding: '0 1rem',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              background: 'rgba(0, 0, 0, 0.6)',\n              zIndex: 999,\n            }}\n          >\n            <div\n              style={{ cursor: 'pointer' }}\n              onClick={() => navigate('/home2')}\n            >\n              <img\n                src={`${process.env.PUBLIC_URL}/photos/home.jpg`}\n                alt=\"Home\"\n                style={{ width: 32, height: 32 }}\n              />\n            </div>\n            <h1 style={{ margin: 0, fontSize: '1.6rem', color: '#4caf50' }}>\n              Let’s Play\n            </h1>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '.5rem' }}>\n              <span style={{ fontSize: '1rem' }}>💎 {diamonds}</span>\n              <button\n                style={{\n                  padding: '.3rem .8rem',\n                  border: 'none',\n                  borderRadius: 6,\n                  background: '#4caf50',\n                  color: '#fff',\n                  fontWeight: 'bold',\n                  cursor: 'pointer',\n                }}\n                onClick={() =>\n                  setActiveTab(t => (t === 'Play' ? 'Leaderboard' : 'Play'))\n                }\n              >\n                {activeTab === 'Play' ? 'Leaderboard' : 'Back'}\n              </button>\n            </div>\n          </div>\n\n          {/* PLAY AREA, LEADERBOARD, MODALS */}\n          {/* ... just paste the rest of your existing JSX here unchanged ... */}\n\n          {/* SKIP CONFIRMATION */}\n          {showSkipConfirm && (\n            <div\n              style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                background: 'rgba(0,0,0,0.6)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                zIndex: 1000,\n              }}\n            >\n              <div\n                style={{\n                  background: 'rgba(255,255,255,0.2)',\n                  backdropFilter: 'blur(8px)',\n                  border: '1px solid rgba(255,255,255,0.4)',\n                  color: '#fff',\n                  padding: '1rem 2rem',\n                  borderRadius: 8,\n                  textAlign: 'center',\n                }}\n              >\n                <p>To skip, use 10 diamonds.</p>\n                <div style={{ display: 'flex', gap: '.5rem', marginTop: '1rem' }}>\n                  <button\n                    style={{\n                      flex: 1,\n                      padding: '.5rem',\n                      border: 'none',\n                      borderRadius: 6,\n                      background: 'rgba(255,255,255,0.3)',\n                      color: '#000',\n                      fontWeight: 'bold',\n                      cursor: 'pointer',\n                    }}\n                    onClick={confirmSkip}\n                  >\n                    Use\n                  </button>\n                  <button\n                    style={{\n                      flex: 1,\n                      padding: '.5rem',\n                      border: 'none',\n                      borderRadius: 6,\n                      background: 'rgba(255,255,255,0.3)',\n                      color: '#000',\n                      fontWeight: 'bold',\n                      cursor: 'pointer',\n                    }}\n                    onClick={() => setShowSkipConfirm(false)}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* GAME OVER NAME PROMPT */}\n          {showName && (\n            <div\n              style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                background: 'rgba(0,0,0,0.6)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                zIndex: 1000,\n              }}\n            >\n              <div\n                style={{\n                  background: '#fff',\n                  padding: '1.5rem 2rem',\n                  borderRadius: 8,\n                  textAlign: 'center',\n                  maxWidth: '90%',\n                }}\n              >\n                <h3>Game Over!</h3>\n                <p>Score: {results.filter(r => r.correct).length}</p>\n                <input\n                  placeholder=\"Enter your name\"\n                  value={playerName}\n                  onChange={e => setPlayerName(e.target.value)}\n                  style={{ width: '100%', boxSizing: 'border-box', margin: '1rem 0' }}\n                />\n                <button\n                  style={{\n                    padding: '.5rem 1rem',\n                    border: 'none',\n                    borderRadius: 6,\n                    background: '#4caf50',\n                    color: '#fff',\n                    fontWeight: 'bold',\n                    cursor: 'pointer',\n                  }}\n                  onClick={saveScore}\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}