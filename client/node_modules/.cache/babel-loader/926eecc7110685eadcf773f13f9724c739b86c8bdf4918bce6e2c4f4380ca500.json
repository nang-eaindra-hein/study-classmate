{"ast":null,"code":"var _jsxFileName = \"/Users/nangeaindrahein/study-classmate/client/src/pages/PlayPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './PlayPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = 'https://study-classmate-server.onrender.com';\nexport default function PlayPage() {\n  _s();\n  var _quizCards$currentInd;\n  console.log(\"ðŸš€ PlayPage mounted â€” diamonds:\", diamonds, \"activeTab:\", activeTab);\n  const navigate = useNavigate();\n  const TODAY = new Date().toDateString();\n  const username = localStorage.getItem('username');\n\n  // GENERAL\n  const [activeTab, setActiveTab] = useState('Play');\n  const [diamonds, setDiamonds] = useState(20);\n  const [scores, setScores] = useState([]);\n\n  // CARD SELECTION\n  const [mode, setMode] = useState('select');\n  const [cards, setCards] = useState([]);\n  const [count, setCount] = useState(5);\n  const [manualList, setManualList] = useState(Array.from({\n    length: 5\n  }, () => ({\n    word: '',\n    definition: ''\n  })));\n  const [loadingGen, setLoadingGen] = useState(false);\n\n  // QUIZ\n  const [quizCards, setQuizCards] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [timer, setTimer] = useState(15);\n  const timerRef = useRef(null);\n  const [guess, setGuess] = useState('');\n  const [results, setResults] = useState([]);\n\n  // MODALS\n  const [showSkipConfirm, setShowSkipConfirm] = useState(false);\n  const [showName, setShowName] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [sortBy, setSortBy] = useState('highest');\n\n  // Load initial game state\n  useEffect(() => {\n    fetch(`${API}/game-state?username=${username}`).then(r => r.json()).then(data => {\n      setDiamonds(data.diamonds);\n      setScores(data.scores);\n    }).catch(console.error);\n  }, [username]);\n\n  // Timer logic\n  const startTimer = () => {\n    clearInterval(timerRef.current);\n    setTimer(15);\n    timerRef.current = setInterval(() => {\n      setTimer(t => {\n        if (t <= 1) {\n          clearInterval(timerRef.current);\n          promptSkip(); // auto-skip when timeâ€™s up\n          return 15;\n        }\n        return t - 1;\n      });\n    }, 1000);\n  };\n\n  // Answer or skip\n  const handleAnswer = async (submitted, isSkip = false) => {\n    clearInterval(timerRef.current);\n\n    // check diamonds on skip\n    if (isSkip && diamonds < 10) {\n      return setShowSkipConfirm(true);\n    }\n\n    // deduct if skipping\n    if (isSkip) {\n      const newD = diamonds - 10;\n      setDiamonds(newD);\n      await fetch(`${API}/update-diamonds`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          diamonds: newD\n        })\n      }).catch(console.error);\n    }\n\n    // check correct\n    let correct = false;\n    if (!isSkip && submitted.trim()) {\n      correct = submitted.trim().toLowerCase() === quizCards[currentIndex].word.toLowerCase();\n    }\n\n    // record\n    const updated = [...results, {\n      ...quizCards[currentIndex],\n      correct\n    }];\n    setResults(updated);\n\n    // next or end\n    if (updated.length >= quizCards.length) {\n      setShowName(true);\n    } else {\n      setCurrentIndex(i => i + 1);\n      setGuess('');\n      startTimer();\n    }\n  };\n\n  // Skip flow\n  const promptSkip = () => setShowSkipConfirm(true);\n  const confirmSkip = () => {\n    setShowSkipConfirm(false);\n    handleAnswer('', true);\n  };\n\n  // Generate via AI\n  const handleGenerate = async () => {\n    setLoadingGen(true);\n    try {\n      const setWords = new Set();\n      while (setWords.size < count) {\n        const r = await fetch(`${API}/generate-word`, {\n          method: 'POST'\n        });\n        const {\n          word\n        } = await r.json();\n        setWords.add(word);\n      }\n      const words = Array.from(setWords);\n      const defs = await Promise.all(words.map(async w => {\n        const res = await fetch(`${API}/define-word`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            word: w\n          })\n        });\n        const {\n          content\n        } = await res.json();\n        const head = content.split(/Example sentence/i)[0];\n        const m = head.match(/Definition:\\s*([^-\\n]+)/i);\n        return {\n          word: w,\n          definition: m ? m[1].trim() : head.trim()\n        };\n      }));\n      setCards(defs);\n      setMode('review');\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setLoadingGen(false);\n    }\n  };\n\n  // Manual review\n  const handleReviewManual = () => {\n    setCards(manualList.slice(0, count));\n    setMode('review');\n  };\n\n  // Start quiz\n  const handleStartQuiz = () => {\n    setQuizCards([...cards].sort(() => Math.random() - 0.5));\n    setResults([]);\n    setCurrentIndex(0);\n    startTimer();\n    setMode('quiz');\n  };\n\n  // Save score\n  const saveScore = async () => {\n    if (!playerName.trim()) return;\n    const correctCount = results.filter(r => r.correct).length;\n    const res = await fetch(`${API}/save-score`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        name: playerName,\n        score: correctCount\n      })\n    });\n    const {\n      scores: updated\n    } = await res.json();\n    setScores(updated);\n    setShowName(false);\n    setMode('select');\n    setPlayerName('');\n    if (localStorage.getItem('lastQuizDate') !== TODAY) {\n      localStorage.setItem('lastQuizDate', TODAY);\n      // bump streak\n      const r1 = await fetch(`${API}/get-streak?username=${username}`);\n      const {\n        streakDays\n      } = await r1.json();\n      await fetch(`${API}/save-streak`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          streakDays: (streakDays || 0) + 1\n        })\n      });\n    }\n  };\n\n  // Sort scores\n  const sorted = [...scores].sort((a, b) => {\n    if (sortBy === 'highest') return b.score - a.score;\n    if (sortBy === 'lowest') return a.score - b.score;\n    if (sortBy === 'earliest') return new Date(a.time) - new Date(b.time);\n    return new Date(b.time) - new Date(a.time);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"common-page\",\n    style: {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages3.jpg)`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-link\",\n          onClick: () => navigate('/home2'),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${process.env.PUBLIC_URL}/photos/home.jpg`,\n            alt: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Let\\u2019s Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"diamonds\",\n            children: [\"\\uD83D\\uDC8E \", diamonds]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(t => t === 'Play' ? 'Leaderboard' : 'Play'),\n            children: activeTab === 'Play' ? 'Leaderboard' : 'Back'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), activeTab === 'Play' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-area panel\",\n      children: [mode === 'select' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number of Cards:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: count,\n          onChange: e => {\n            const n = +e.target.value;\n            setCount(n);\n            setManualList(Array.from({\n              length: n\n            }, () => ({\n              word: '',\n              definition: ''\n            })));\n          },\n          children: [5, 10, 15].map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: n,\n            children: n\n          }, n, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerate,\n          disabled: loadingGen,\n          children: loadingGen ? 'Generatingâ€¦' : 'Generate From AI'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Or Manual Insert:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this), manualList.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '.5rem',\n            margin: '.5rem 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Word\",\n            value: c.word,\n            onChange: e => {\n              const copy = [...manualList];\n              copy[i].word = e.target.value;\n              setManualList(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Meaning\",\n            value: c.definition,\n            onChange: e => {\n              const copy = [...manualList];\n              copy[i].definition = e.target.value;\n              setManualList(copy);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReviewManual,\n          disabled: !manualList.slice(0, count).every(x => x.word && x.definition),\n          children: \"Review Manual Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this), mode === 'review' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Flashcards Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-list\",\n          children: cards.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"front\",\n                children: c.word\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"back\",\n                children: c.definition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setMode('select'),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartQuiz,\n            children: \"Start Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }, this), mode === 'quiz' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time left: \", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_quizCards$currentInd = quizCards[currentIndex]) === null || _quizCards$currentInd === void 0 ? void 0 : _quizCards$currentInd.definition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: guess,\n          onChange: e => setGuess(e.target.value),\n          placeholder: \"Your guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswer(guess, false),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: promptSkip,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.location.reload(),\n            children: \"Restart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), activeTab === 'Leaderboard' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortBy,\n        onChange: e => setSortBy(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"highest\",\n          children: \"Highest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lowest\",\n          children: \"Lowest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"earliest\",\n          children: \"Earliest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"latest\",\n          children: \"Latest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sorted.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [s.name, \" \\u2013 \", s.score, \" \\u2013\", ' ', new Date(s.time).toLocaleString()]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this), showSkipConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content confirm\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"To skip, use 10 diamonds.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirm-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: confirmSkip,\n            children: \"Use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSkipConfirm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }, this), showName && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", results.filter(r => r.correct).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your name\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveScore,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayPage, \"wI8ybyQ9afvrkaEREDU+eYQlTK0=\", false, function () {\n  return [useNavigate];\n});\n_c = PlayPage;\nvar _c;\n$RefreshReg$(_c, \"PlayPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","API","PlayPage","_s","_quizCards$currentInd","console","log","diamonds","activeTab","navigate","TODAY","Date","toDateString","username","localStorage","getItem","setActiveTab","setDiamonds","scores","setScores","mode","setMode","cards","setCards","count","setCount","manualList","setManualList","Array","from","length","word","definition","loadingGen","setLoadingGen","quizCards","setQuizCards","currentIndex","setCurrentIndex","timer","setTimer","timerRef","guess","setGuess","results","setResults","showSkipConfirm","setShowSkipConfirm","showName","setShowName","playerName","setPlayerName","sortBy","setSortBy","fetch","then","r","json","data","catch","error","startTimer","clearInterval","current","setInterval","t","promptSkip","handleAnswer","submitted","isSkip","newD","method","headers","body","JSON","stringify","correct","trim","toLowerCase","updated","i","confirmSkip","handleGenerate","setWords","Set","size","add","words","defs","Promise","all","map","w","res","content","head","split","m","match","e","handleReviewManual","slice","handleStartQuiz","sort","Math","random","saveScore","correctCount","filter","name","score","setItem","r1","streakDays","sorted","a","b","time","className","style","backgroundImage","process","env","PUBLIC_URL","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","n","target","disabled","c","display","gap","margin","placeholder","copy","every","x","window","location","reload","s","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/nangeaindrahein/study-classmate/client/src/pages/PlayPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './PlayPage.css';\n\nconst API = 'https://study-classmate-server.onrender.com';\n\nexport default function PlayPage() {\n\n  console.log(\"ðŸš€ PlayPage mounted â€” diamonds:\", diamonds, \"activeTab:\", activeTab);\n\n  const navigate = useNavigate();\n  const TODAY = new Date().toDateString();\n  const username = localStorage.getItem('username');\n\n  // GENERAL\n  const [activeTab, setActiveTab] = useState('Play');\n  const [diamonds, setDiamonds] = useState(20);\n  const [scores, setScores] = useState([]);\n\n  // CARD SELECTION\n  const [mode, setMode] = useState('select');\n  const [cards, setCards] = useState([]);\n  const [count, setCount] = useState(5);\n  const [manualList, setManualList] = useState(\n    Array.from({ length: 5 }, () => ({ word: '', definition: '' }))\n  );\n  const [loadingGen, setLoadingGen] = useState(false);\n\n  // QUIZ\n  const [quizCards, setQuizCards] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [timer, setTimer] = useState(15);\n  const timerRef = useRef(null);\n  const [guess, setGuess] = useState('');\n  const [results, setResults] = useState([]);\n\n  // MODALS\n  const [showSkipConfirm, setShowSkipConfirm] = useState(false);\n  const [showName, setShowName] = useState(false);\n  const [playerName, setPlayerName] = useState('');\n  const [sortBy, setSortBy] = useState('highest');\n\n  // Load initial game state\n  useEffect(() => {\n    fetch(`${API}/game-state?username=${username}`)\n      .then(r => r.json())\n      .then(data => {\n        setDiamonds(data.diamonds);\n        setScores(data.scores);\n      })\n      .catch(console.error);\n  }, [username]);\n\n  // Timer logic\n  const startTimer = () => {\n    clearInterval(timerRef.current);\n    setTimer(15);\n    timerRef.current = setInterval(() => {\n      setTimer(t => {\n        if (t <= 1) {\n          clearInterval(timerRef.current);\n          promptSkip(); // auto-skip when timeâ€™s up\n          return 15;\n        }\n        return t - 1;\n      });\n    }, 1000);\n  };\n\n  // Answer or skip\n  const handleAnswer = async (submitted, isSkip = false) => {\n    clearInterval(timerRef.current);\n\n    // check diamonds on skip\n    if (isSkip && diamonds < 10) {\n      return setShowSkipConfirm(true);\n    }\n\n    // deduct if skipping\n    if (isSkip) {\n      const newD = diamonds - 10;\n      setDiamonds(newD);\n      await fetch(`${API}/update-diamonds`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, diamonds: newD }),\n      }).catch(console.error);\n    }\n\n    // check correct\n    let correct = false;\n    if (!isSkip && submitted.trim()) {\n      correct =\n        submitted.trim().toLowerCase() ===\n        quizCards[currentIndex].word.toLowerCase();\n    }\n\n    // record\n    const updated = [...results, { ...quizCards[currentIndex], correct }];\n    setResults(updated);\n\n    // next or end\n    if (updated.length >= quizCards.length) {\n      setShowName(true);\n    } else {\n      setCurrentIndex(i => i + 1);\n      setGuess('');\n      startTimer();\n    }\n  };\n\n  // Skip flow\n  const promptSkip = () => setShowSkipConfirm(true);\n\n  const confirmSkip = () => {\n    setShowSkipConfirm(false);\n    handleAnswer('', true);\n  };\n\n  // Generate via AI\n  const handleGenerate = async () => {\n    setLoadingGen(true);\n    try {\n      const setWords = new Set();\n      while (setWords.size < count) {\n        const r = await fetch(`${API}/generate-word`, { method: 'POST' });\n        const { word } = await r.json();\n        setWords.add(word);\n      }\n      const words = Array.from(setWords);\n      const defs = await Promise.all(\n        words.map(async w => {\n          const res = await fetch(`${API}/define-word`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ word: w }),\n          });\n          const { content } = await res.json();\n          const head = content.split(/Example sentence/i)[0];\n          const m = head.match(/Definition:\\s*([^-\\n]+)/i);\n          return { word: w, definition: m ? m[1].trim() : head.trim() };\n        })\n      );\n      setCards(defs);\n      setMode('review');\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setLoadingGen(false);\n    }\n  };\n\n  // Manual review\n  const handleReviewManual = () => {\n    setCards(manualList.slice(0, count));\n    setMode('review');\n  };\n\n  // Start quiz\n  const handleStartQuiz = () => {\n    setQuizCards([...cards].sort(() => Math.random() - 0.5));\n    setResults([]);\n    setCurrentIndex(0);\n    startTimer();\n    setMode('quiz');\n  };\n\n  // Save score\n  const saveScore = async () => {\n    if (!playerName.trim()) return;\n    const correctCount = results.filter(r => r.correct).length;\n    const res = await fetch(`${API}/save-score`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username,\n        name: playerName,\n        score: correctCount,\n      }),\n    });\n    const { scores: updated } = await res.json();\n    setScores(updated);\n    setShowName(false);\n    setMode('select');\n    setPlayerName('');\n\n    if (localStorage.getItem('lastQuizDate') !== TODAY) {\n      localStorage.setItem('lastQuizDate', TODAY);\n      // bump streak\n      const r1 = await fetch(`${API}/get-streak?username=${username}`);\n      const { streakDays } = await r1.json();\n      await fetch(`${API}/save-streak`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, streakDays: (streakDays || 0) + 1 }),\n      });\n    }\n  };\n\n  // Sort scores\n  const sorted = [...scores].sort((a, b) => {\n    if (sortBy === 'highest') return b.score - a.score;\n    if (sortBy === 'lowest') return a.score - b.score;\n    if (sortBy === 'earliest') return new Date(a.time) - new Date(b.time);\n    return new Date(b.time) - new Date(a.time);\n  });\n\n  return (\n    <div\n      className=\"common-page\"\n      style={{\n        backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages3.jpg)`,\n      }}\n    >\n      {/* HEADER */}\n      <div className=\"header-bar\">\n        <div className=\"inner\">\n          <div className=\"home-link\" onClick={() => navigate('/home2')}>\n            <img\n              src={`${process.env.PUBLIC_URL}/photos/home.jpg`}\n              alt=\"Home\"\n            />\n          </div>\n          <h1>Letâ€™s Play</h1>\n          <div className=\"right-bar\">\n            <span className=\"diamonds\">ðŸ’Ž {diamonds}</span>\n            <button\n              onClick={() =>\n                setActiveTab(t => (t === 'Play' ? 'Leaderboard' : 'Play'))\n              }\n            >\n              {activeTab === 'Play' ? 'Leaderboard' : 'Back'}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* PLAY AREA */}\n      {activeTab === 'Play' && (\n        <div className=\"play-area panel\">\n          {mode === 'select' && (\n            <div className=\"select-panel\">\n              <label>Number of Cards:</label>\n              <select\n                value={count}\n                onChange={e => {\n                  const n = +e.target.value;\n                  setCount(n);\n                  setManualList(\n                    Array.from({ length: n }, () => ({\n                      word: '',\n                      definition: '',\n                    }))\n                  );\n                }}\n              >\n                {[5, 10, 15].map(n => (\n                  <option key={n} value={n}>\n                    {n}\n                  </option>\n                ))}\n              </select>\n\n              <button onClick={handleGenerate} disabled={loadingGen}>\n                {loadingGen ? 'Generatingâ€¦' : 'Generate From AI'}\n              </button>\n\n              <h3>Or Manual Insert:</h3>\n              {manualList.map((c, i) => (\n                <div\n                  key={i}\n                  style={{ display: 'flex', gap: '.5rem', margin: '.5rem 0' }}\n                >\n                  <input\n                    placeholder=\"Word\"\n                    value={c.word}\n                    onChange={e => {\n                      const copy = [...manualList];\n                      copy[i].word = e.target.value;\n                      setManualList(copy);\n                    }}\n                  />\n                  <input\n                    placeholder=\"Meaning\"\n                    value={c.definition}\n                    onChange={e => {\n                      const copy = [...manualList];\n                      copy[i].definition = e.target.value;\n                      setManualList(copy);\n                    }}\n                  />\n                </div>\n              ))}\n\n              <button\n                onClick={handleReviewManual}\n                disabled={\n                  !manualList\n                    .slice(0, count)\n                    .every(x => x.word && x.definition)\n                }\n              >\n                Review Manual Cards\n              </button>\n            </div>\n          )}\n\n          {mode === 'review' && (\n            <div className=\"review-panel\">\n              <h2>Flashcards Preview</h2>\n              <div className=\"flashcard-list\">\n                {cards.map((c, i) => (\n                  <div key={i} className=\"flashcard\">\n                    <div className=\"inner\">\n                      <div className=\"front\">{c.word}</div>\n                      <div className=\"back\">{c.definition}</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <div className=\"review-buttons\">\n                <button onClick={() => setMode('select')}>Back</button>\n                <button onClick={handleStartQuiz}>Start Quiz</button>\n              </div>\n            </div>\n          )}\n\n          {mode === 'quiz' && (\n            <div className=\"quiz-panel\">\n              <p>Time left: {timer}s</p>\n              <p>{quizCards[currentIndex]?.definition}</p>\n              <input\n                value={guess}\n                onChange={e => setGuess(e.target.value)}\n                placeholder=\"Your guess\"\n              />\n              <div className=\"quiz-buttons\">\n                <button onClick={() => handleAnswer(guess, false)}>\n                  Submit\n                </button>\n                <button onClick={promptSkip}>Skip</button>\n                <button onClick={() => window.location.reload()}>\n                  Restart\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* LEADERBOARD */}\n      {activeTab === 'Leaderboard' && (\n        <div className=\"leaderboard panel\">\n          <h2>Leaderboard</h2>\n          <select\n            value={sortBy}\n            onChange={e => setSortBy(e.target.value)}\n          >\n            <option value=\"highest\">Highest</option>\n            <option value=\"lowest\">Lowest</option>\n            <option value=\"earliest\">Earliest</option>\n            <option value=\"latest\">Latest</option>\n          </select>\n          <ul>\n            {sorted.map((s, i) => (\n              <li key={i}>\n                {s.name} â€“ {s.score} â€“{' '}\n                {new Date(s.time).toLocaleString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* SKIP CONFIRMATION */}\n      {showSkipConfirm && (\n        <div className=\"modal\">\n          <div className=\"modal-content confirm\">\n            <p>To skip, use 10 diamonds.</p>\n            <div className=\"confirm-buttons\">\n              <button onClick={confirmSkip}>Use</button>\n              <button onClick={() => setShowSkipConfirm(false)}>\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* NAME / SAVE SCORE */}\n      {showName && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h3>Game Over!</h3>\n            <p>Score: {results.filter(r => r.correct).length}</p>\n            <input\n              placeholder=\"Enter your name\"\n              value={playerName}\n              onChange={e => setPlayerName(e.target.value)}\n            />\n            <button onClick={saveScore}>Save</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}