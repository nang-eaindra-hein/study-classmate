{"ast":null,"code":"var _jsxFileName = \"/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js\",\n  _s = $RefreshSig$();\n// src/pages/StudyPage.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StudyPage() {\n  _s();\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const fileInputRef = useRef(null);\n\n  // Background style\n  const bgStyle = {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages4.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat'\n  };\n\n  // --- STATE ---\n  // Summaries\n  const [rawNotes, setRawNotes] = useState('');\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [loadingSum, setLoadingSum] = useState(false);\n  const [savedSummaries, setSavedSummaries] = useState([]);\n  // Paraphrases\n  const [text, setText] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [paraphrase, setParaphrase] = useState('');\n  const [loadingPara, setLoadingPara] = useState(false);\n  const [savedParaphrases, setSavedParaphrases] = useState([]);\n  // Vocab search\n  const [searchWord, setSearchWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingGenWord, setLoadingGenWord] = useState(false);\n  const [loadingSearch, setLoadingSearch] = useState(false);\n  const [savedVocabList, setSavedVocabList] = useState([]);\n  // Manual vocab\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n  // Manual extraction\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n  // AI extraction\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n  // UI message\n  const [message, setMessage] = useState('');\n\n  // Load this user's saved data\n  const loadData = async () => {\n    try {\n      const sumRes = await fetch(`/summaries?username=${username}`);\n      setSavedSummaries(await sumRes.json());\n      const paraRes = await fetch(`/paraphrases?username=${username}`);\n      setSavedParaphrases(await paraRes.json());\n      const vocabRes = await fetch(`/vocab-list?username=${username}`);\n      setSavedVocabList(await vocabRes.json());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    if (username) loadData();\n  }, [username]);\n\n  // ─── Handlers ───────────────────────────────────────────────────\n\n  // Summarise\n  const genNotes = async () => {\n    setLoadingSum(true);\n    setMessage('');\n    try {\n      const res = await fetch('/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setRawNotes(note || '');\n    } catch {\n      setMessage('Error generating notes');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const doSumm = async () => {\n    if (!rawNotes.trim() && !file) {\n      setMessage('Paste notes or choose a file');\n      return;\n    }\n    setLoadingSum(true);\n    setMessage('');\n    try {\n      let data;\n      if (rawNotes.trim()) {\n        data = await (await fetch('/summarize-text', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: rawNotes\n          })\n        })).json();\n      } else {\n        const form = new FormData();\n        form.append('file', file);\n        data = await (await fetch('/summarize', {\n          method: 'POST',\n          body: form\n        })).json();\n      }\n      setSummary(data.summary || '');\n    } catch {\n      setMessage('Error summarising');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const saveSum = async () => {\n    if (!summary) return;\n    try {\n      await fetch('/save-summary', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          content: summary\n        })\n      });\n      setMessage('Summary saved');\n      loadData();\n    } catch {\n      setMessage('Error saving summary');\n    }\n  };\n\n  // Paraphrase\n  const doPara = async () => {\n    if (!text.trim()) {\n      setMessage('Enter text');\n      return;\n    }\n    setLoadingPara(true);\n    setMessage('');\n    try {\n      const res = await fetch('/paraphrase-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text,\n          tone\n        })\n      });\n      const {\n        content\n      } = await res.json();\n      setParaphrase(content || '');\n    } catch {\n      setMessage('Error paraphrasing');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const savePara = async () => {\n    if (!paraphrase) return;\n    try {\n      await fetch('/save-paraphrase', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          content: paraphrase,\n          tone\n        })\n      });\n      setMessage('Paraphrase saved');\n      loadData();\n    } catch {\n      setMessage('Error saving paraphrase');\n    }\n  };\n\n  // Vocab search\n  const genWord = async () => {\n    setLoadingGenWord(true);\n    setMessage('');\n    try {\n      const res = await fetch('/generate-word', {\n        method: 'POST'\n      });\n      const {\n        word\n      } = await res.json();\n      setSearchWord(word || '');\n    } catch {\n      setMessage('Error generating word');\n    } finally {\n      setLoadingGenWord(false);\n    }\n  };\n  const defineWord = async () => {\n    if (!searchWord.trim()) {\n      setMessage('Enter a word');\n      return;\n    }\n    setLoadingSearch(true);\n    setMessage('');\n    try {\n      const res = await fetch('/define-word', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          word: searchWord.trim()\n        })\n      });\n      const {\n        content\n      } = await res.json();\n      setVocabDef(content || '');\n    } catch {\n      setMessage('Error defining word');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n  const saveVocab = async () => {\n    if (!searchWord || !vocabDef) return;\n    try {\n      await fetch('/save-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          word: searchWord,\n          definition: vocabDef\n        })\n      });\n      setMessage('Vocab saved');\n      loadData();\n    } catch {\n      setMessage('Error saving vocab');\n    }\n  };\n\n  // Manual vocab\n  const saveManual = async () => {\n    if (!manualWord.trim() || !manualMeaning.trim()) {\n      setMessage('Fill both fields');\n      return;\n    }\n    try {\n      await fetch('/save-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          word: manualWord,\n          definition: manualMeaning\n        })\n      });\n      setMessage('Manual vocab saved');\n      loadData();\n    } catch {\n      setMessage('Error saving manual vocab');\n    }\n  };\n\n  // Manual extraction\n  const extractManual = async () => {\n    if (!manualText.trim()) {\n      setMessage('Paste a paragraph');\n      return;\n    }\n    setLoadingExtractManual(true);\n    setMessage('');\n    try {\n      const res = await fetch('/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: manualText\n        })\n      });\n      const {\n        words\n      } = await res.json();\n      setExtractedManual(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n  const saveExtractedManual = async () => {\n    if (!extractedManual.length) return;\n    try {\n      for (const w of extractedManual) {\n        await fetch('/save-vocab', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username,\n            word: w,\n            definition: ''\n          })\n        });\n      }\n      setMessage('Extracted vocab saved');\n      loadData();\n    } catch {\n      setMessage('Error saving extracted vocab');\n    }\n  };\n\n  // AI extraction\n  const generateAiPara = async () => {\n    setLoadingGenAiPara(true);\n    setMessage('');\n    try {\n      const res = await fetch('/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setAiParagraph(note || '');\n    } catch {\n      setMessage('Error generating paragraph');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n  const extractAi = async () => {\n    if (!aiParagraph.trim()) {\n      setMessage('Generate paragraph first');\n      return;\n    }\n    setLoadingExtractAi(true);\n    setMessage('');\n    try {\n      const res = await fetch('/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: aiParagraph\n        })\n      });\n      const {\n        words\n      } = await res.json();\n      setExtractedAi(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n  const saveExtractedAi = async () => {\n    if (!extractedAi.length) return;\n    try {\n      for (const w of extractedAi) {\n        await fetch('/save-vocab', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username,\n            word: w,\n            definition: ''\n          })\n        });\n      }\n      setMessage('AI extracted vocab saved');\n      loadData();\n    } catch {\n      setMessage('Error saving AI extracted vocab');\n    }\n  };\n\n  // ─── RENDER ──────────────────────────────────────────────────────\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"study-page\",\n    style: bgStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/photos/home.jpg`,\n      alt: \"Home\",\n      className: \"streak-home\",\n      onClick: () => navigate('/home2')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-header\",\n      children: \"Let\\u2019s Study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Summarise Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          placeholder: \"Paste notes\\u2026\",\n          value: rawNotes,\n          onChange: e => setRawNotes(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRawNotes(''),\n            children: \"Clear Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: fileInputRef,\n            type: \"file\",\n            accept: \".txt,.pdf\",\n            onChange: e => setFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setFile(null);\n              fileInputRef.current.value = '';\n            },\n            children: \"Clear File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: genNotes,\n            disabled: loadingSum,\n            children: loadingSum ? 'Generating…' : 'Generate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: doSumm,\n          disabled: loadingSum,\n          children: loadingSum ? 'Summarising…' : 'Summarise'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: summary\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: saveSum,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                navigator.clipboard.writeText(summary);\n                setMessage('Copied');\n              },\n              children: \"Copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSummary(''),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), savedSummaries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Saved Summaries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"extracted-list\",\n            children: savedSummaries.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [new Date(s.createdAt).toLocaleString(), \": \", s.content]\n            }, s._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Paraphrase Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          placeholder: \"Enter text\\u2026\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: tone,\n            onChange: e => setTone(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"casual\",\n              children: \"Casual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"academic\",\n              children: \"Academic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: doPara,\n            disabled: loadingPara,\n            children: loadingPara ? 'Paraphrasing…' : 'Paraphrase'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setText(''),\n            children: \"Clear Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), paraphrase && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: paraphrase\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: savePara,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                navigator.clipboard.writeText(paraphrase);\n                setMessage('Copied');\n              },\n              children: \"Copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setParaphrase(''),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), savedParaphrases.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Saved Paraphrases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"extracted-list\",\n            children: savedParaphrases.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [new Date(p.createdAt).toLocaleString(), \" (\", p.tone, \"):\", ' ', p.content]\n            }, p._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vocab Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: genWord,\n            disabled: loadingGenWord,\n            children: loadingGenWord ? 'Generating…' : 'Generate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSearchWord('');\n              setVocabDef('');\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter word\\u2026\",\n          value: searchWord,\n          onChange: e => setSearchWord(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: defineWord,\n          disabled: loadingSearch,\n          children: loadingSearch ? 'Searching…' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), vocabDef && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: vocabDef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), vocabDef && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveVocab,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 24\n        }, this), savedVocabList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Saved Vocab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"extracted-list\",\n            children: savedVocabList.map(v => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [new Date(v.createdAt).toLocaleString(), \": \", v.word, \" \\u2013\", ' ', v.definition]\n            }, v._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Manual Vocab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Word\\u2026\",\n          value: manualWord,\n          onChange: e => setManualWord(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          placeholder: \"Meaning\\u2026\",\n          value: manualMeaning,\n          onChange: e => setManualMeaning(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveManual,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setManualWord('');\n              setManualMeaning('');\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extract-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extract Vocab (Manual)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          placeholder: \"Paste a paragraph\\u2026\",\n          value: manualText,\n          onChange: e => setManualText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: extractManual,\n            disabled: loadingExtractManual,\n            children: loadingExtractManual ? 'Extracting…' : 'Extract'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setManualText('');\n              setExtractedManual([]);\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), extractedManual.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"extracted-list\",\n            children: extractedManual.map(w => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: w\n            }, w, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveExtractedManual,\n            children: \"Save All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extract Vocab (AI)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: generateAiPara,\n            disabled: loadingGenAiPara,\n            children: loadingGenAiPara ? 'Generating…' : 'Generate Paragraph'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setAiParagraph('');\n              setExtractedAi([]);\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), aiParagraph && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: aiParagraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this), aiParagraph && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: extractAi,\n          disabled: loadingExtractAi,\n          children: loadingExtractAi ? 'Extracting…' : 'Extract'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this), extractedAi.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"extracted-list\",\n            children: extractedAi.map(w => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: w\n            }, w, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveExtractedAi,\n            children: \"Save All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n}\n_s(StudyPage, \"Iti1xYT1Hko2CDljuJ+o/dkhpiI=\", false, function () {\n  return [useNavigate];\n});\n_c = StudyPage;\nvar _c;\n$RefreshReg$(_c, \"StudyPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","StudyPage","_s","navigate","username","localStorage","getItem","fileInputRef","bgStyle","backgroundImage","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","backgroundRepeat","rawNotes","setRawNotes","file","setFile","summary","setSummary","loadingSum","setLoadingSum","savedSummaries","setSavedSummaries","text","setText","tone","setTone","paraphrase","setParaphrase","loadingPara","setLoadingPara","savedParaphrases","setSavedParaphrases","searchWord","setSearchWord","vocabDef","setVocabDef","loadingGenWord","setLoadingGenWord","loadingSearch","setLoadingSearch","savedVocabList","setSavedVocabList","manualWord","setManualWord","manualMeaning","setManualMeaning","manualText","setManualText","extractedManual","setExtractedManual","loadingExtractManual","setLoadingExtractManual","aiParagraph","setAiParagraph","extractedAi","setExtractedAi","loadingGenAiPara","setLoadingGenAiPara","loadingExtractAi","setLoadingExtractAi","message","setMessage","loadData","sumRes","fetch","json","paraRes","vocabRes","err","console","error","genNotes","res","method","note","doSumm","trim","data","headers","body","JSON","stringify","form","FormData","append","saveSum","content","doPara","savePara","genWord","word","defineWord","saveVocab","definition","saveManual","extractManual","words","saveExtractedManual","length","w","generateAiPara","extractAi","saveExtractedAi","className","style","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","ref","type","accept","files","current","disabled","dangerouslySetInnerHTML","__html","navigator","clipboard","writeText","map","s","Date","createdAt","toLocaleString","_id","p","v","_c","$RefreshReg$"],"sources":["/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js"],"sourcesContent":["// src/pages/StudyPage.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\n\nexport default function StudyPage() {\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const fileInputRef = useRef(null);\n\n  // Background style\n  const bgStyle = {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages4.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n  };\n\n  // --- STATE ---\n  // Summaries\n  const [rawNotes, setRawNotes] = useState('');\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [loadingSum, setLoadingSum] = useState(false);\n  const [savedSummaries, setSavedSummaries] = useState([]);\n  // Paraphrases\n  const [text, setText] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [paraphrase, setParaphrase] = useState('');\n  const [loadingPara, setLoadingPara] = useState(false);\n  const [savedParaphrases, setSavedParaphrases] = useState([]);\n  // Vocab search\n  const [searchWord, setSearchWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingGenWord, setLoadingGenWord] = useState(false);\n  const [loadingSearch, setLoadingSearch] = useState(false);\n  const [savedVocabList, setSavedVocabList] = useState([]);\n  // Manual vocab\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n  // Manual extraction\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n  // AI extraction\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n  // UI message\n  const [message, setMessage] = useState('');\n\n  // Load this user's saved data\n  const loadData = async () => {\n    try {\n      const sumRes = await fetch(`/summaries?username=${username}`);\n      setSavedSummaries(await sumRes.json());\n      const paraRes = await fetch(`/paraphrases?username=${username}`);\n      setSavedParaphrases(await paraRes.json());\n      const vocabRes = await fetch(`/vocab-list?username=${username}`);\n      setSavedVocabList(await vocabRes.json());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    if (username) loadData();\n  }, [username]);\n\n  // ─── Handlers ───────────────────────────────────────────────────\n\n  // Summarise\n  const genNotes = async () => {\n    setLoadingSum(true); setMessage('');\n    try {\n      const res = await fetch('/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setRawNotes(note || '');\n    } catch {\n      setMessage('Error generating notes');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const doSumm = async () => {\n    if (!rawNotes.trim() && !file) {\n      setMessage('Paste notes or choose a file');\n      return;\n    }\n    setLoadingSum(true); setMessage('');\n    try {\n      let data;\n      if (rawNotes.trim()) {\n        data = await (await fetch('/summarize-text', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ text: rawNotes }),\n        })).json();\n      } else {\n        const form = new FormData();\n        form.append('file', file);\n        data = await (await fetch('/summarize', { method: 'POST', body: form })).json();\n      }\n      setSummary(data.summary || '');\n    } catch {\n      setMessage('Error summarising');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const saveSum = async () => {\n    if (!summary) return;\n    try {\n      await fetch('/save-summary', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, content: summary }),\n      });\n      setMessage('Summary saved');\n      loadData();\n    } catch {\n      setMessage('Error saving summary');\n    }\n  };\n\n  // Paraphrase\n  const doPara = async () => {\n    if (!text.trim()) { setMessage('Enter text'); return; }\n    setLoadingPara(true); setMessage('');\n    try {\n      const res = await fetch('/paraphrase-text', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text, tone }),\n      });\n      const { content } = await res.json();\n      setParaphrase(content || '');\n    } catch {\n      setMessage('Error paraphrasing');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const savePara = async () => {\n    if (!paraphrase) return;\n    try {\n      await fetch('/save-paraphrase', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, content: paraphrase, tone }),\n      });\n      setMessage('Paraphrase saved');\n      loadData();\n    } catch {\n      setMessage('Error saving paraphrase');\n    }\n  };\n\n  // Vocab search\n  const genWord = async () => {\n    setLoadingGenWord(true); setMessage('');\n    try {\n      const res = await fetch('/generate-word', { method: 'POST' });\n      const { word } = await res.json();\n      setSearchWord(word || '');\n    } catch {\n      setMessage('Error generating word');\n    } finally {\n      setLoadingGenWord(false);\n    }\n  };\n  const defineWord = async () => {\n    if (!searchWord.trim()) { setMessage('Enter a word'); return; }\n    setLoadingSearch(true); setMessage('');\n    try {\n      const res = await fetch('/define-word', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ word: searchWord.trim() }),\n      });\n      const { content } = await res.json();\n      setVocabDef(content || '');\n    } catch {\n      setMessage('Error defining word');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n  const saveVocab = async () => {\n    if (!searchWord || !vocabDef) return;\n    try {\n      await fetch('/save-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, word: searchWord, definition: vocabDef }),\n      });\n      setMessage('Vocab saved');\n      loadData();\n    } catch {\n      setMessage('Error saving vocab');\n    }\n  };\n\n  // Manual vocab\n  const saveManual = async () => {\n    if (!manualWord.trim() || !manualMeaning.trim()) {\n      setMessage('Fill both fields'); return;\n    }\n    try {\n      await fetch('/save-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, word: manualWord, definition: manualMeaning }),\n      });\n      setMessage('Manual vocab saved');\n      loadData();\n    } catch {\n      setMessage('Error saving manual vocab');\n    }\n  };\n\n  // Manual extraction\n  const extractManual = async () => {\n    if (!manualText.trim()) { setMessage('Paste a paragraph'); return; }\n    setLoadingExtractManual(true); setMessage('');\n    try {\n      const res = await fetch('/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: manualText }),\n      });\n      const { words } = await res.json();\n      setExtractedManual(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n  const saveExtractedManual = async () => {\n    if (!extractedManual.length) return;\n    try {\n      for (const w of extractedManual) {\n        await fetch('/save-vocab', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ username, word: w, definition: '' }),\n        });\n      }\n      setMessage('Extracted vocab saved');\n      loadData();\n    } catch {\n      setMessage('Error saving extracted vocab');\n    }\n  };\n\n  // AI extraction\n  const generateAiPara = async () => {\n    setLoadingGenAiPara(true); setMessage('');\n    try {\n      const res = await fetch('/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setAiParagraph(note || '');\n    } catch {\n      setMessage('Error generating paragraph');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n  const extractAi = async () => {\n    if (!aiParagraph.trim()) { setMessage('Generate paragraph first'); return; }\n    setLoadingExtractAi(true); setMessage('');\n    try {\n      const res = await fetch('/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: aiParagraph }),\n      });\n      const { words } = await res.json();\n      setExtractedAi(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n  const saveExtractedAi = async () => {\n    if (!extractedAi.length) return;\n    try {\n      for (const w of extractedAi) {\n        await fetch('/save-vocab', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ username, word: w, definition: '' }),\n        });\n      }\n      setMessage('AI extracted vocab saved');\n      loadData();\n    } catch {\n      setMessage('Error saving AI extracted vocab');\n    }\n  };\n\n  // ─── RENDER ──────────────────────────────────────────────────────\n  return (\n    <div className=\"study-page\" style={bgStyle}>\n      {/* Home & Header */}\n      <img\n        src={`${process.env.PUBLIC_URL}/photos/home.jpg`}\n        alt=\"Home\"\n        className=\"streak-home\"\n        onClick={() => navigate('/home2')}\n      />\n      <h1 className=\"main-header\">Let’s Study</h1>\n      {message && <div className=\"message\">{message}</div>}\n\n      {/* Top Row: Summarise & Paraphrase */}\n      <div className=\"top-row\">\n        <section className=\"section\">\n          <h2>Summarise Note</h2>\n          <textarea\n            rows=\"4\"\n            placeholder=\"Paste notes…\"\n            value={rawNotes}\n            onChange={e => setRawNotes(e.target.value)}\n          />\n          <div className=\"action-buttons\">\n            <button onClick={() => setRawNotes('')}>Clear Text</button>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\".txt,.pdf\"\n              onChange={e => setFile(e.target.files[0])}\n            />\n            <button\n              onClick={() => {\n                setFile(null);\n                fileInputRef.current.value = '';\n              }}\n            >\n              Clear File\n            </button>\n            <button onClick={genNotes} disabled={loadingSum}>\n              {loadingSum ? 'Generating…' : 'Generate'}\n            </button>\n          </div>\n          <button onClick={doSumm} disabled={loadingSum}>\n            {loadingSum ? 'Summarising…' : 'Summarise'}\n          </button>\n          {summary && (\n            <div className=\"generated-output\">\n              <div dangerouslySetInnerHTML={{ __html: summary }} />\n              <div className=\"action-buttons\">\n                <button onClick={saveSum}>Save</button>\n                <button\n                  onClick={() => {\n                    navigator.clipboard.writeText(summary);\n                    setMessage('Copied');\n                  }}\n                >\n                  Copy\n                </button>\n                <button onClick={() => setSummary('')}>Clear</button>\n              </div>\n            </div>\n          )}\n          {savedSummaries.length > 0 && (\n            <div className=\"generated-output\">\n              <h3>Saved Summaries</h3>\n              <ul className=\"extracted-list\">\n                {savedSummaries.map(s => (\n                  <li key={s._id}>\n                    {new Date(s.createdAt).toLocaleString()}: {s.content}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </section>\n\n        <section className=\"section\">\n          <h2>Paraphrase Note</h2>\n          <textarea\n            rows=\"4\"\n            placeholder=\"Enter text…\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n          />\n          <div className=\"action-buttons\">\n            <select value={tone} onChange={e => setTone(e.target.value)}>\n              <option value=\"casual\">Casual</option>\n              <option value=\"academic\">Academic</option>\n            </select>\n            <button onClick={doPara} disabled={loadingPara}>\n              {loadingPara ? 'Paraphrasing…' : 'Paraphrase'}\n            </button>\n            <button onClick={() => setText('')}>Clear Text</button>\n          </div>\n          {paraphrase && (\n            <div className=\"generated-output\">\n              <div dangerouslySetInnerHTML={{ __html: paraphrase }} />\n              <div className=\"action-buttons\">\n                <button onClick={savePara}>Save</button>\n                <button\n                  onClick={() => {\n                    navigator.clipboard.writeText(paraphrase);\n                    setMessage('Copied');\n                  }}\n                >\n                  Copy\n                </button>\n                <button onClick={() => setParaphrase('')}>Clear</button>\n              </div>\n            </div>\n          )}\n          {savedParaphrases.length > 0 && (\n            <div className=\"generated-output\">\n              <h3>Saved Paraphrases</h3>\n              <ul className=\"extracted-list\">\n                {savedParaphrases.map(p => (\n                  <li key={p._id}>\n                    {new Date(p.createdAt).toLocaleString()} ({p.tone}):{' '}\n                    {p.content}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </section>\n      </div>\n\n      {/* Middle Row: Vocab Search & Manual Vocab */}\n      <div className=\"middle-row\">\n        <section className=\"section\">\n          <h2>Vocab Search</h2>\n          <div className=\"action-buttons\">\n            <button onClick={genWord} disabled={loadingGenWord}>\n              {loadingGenWord ? 'Generating…' : 'Generate'}\n            </button>\n            <button\n              onClick={() => {\n                setSearchWord('');\n                setVocabDef('');\n              }}\n            >\n              Clear\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter word…\"\n            value={searchWord}\n            onChange={e => setSearchWord(e.target.value)}\n          />\n          <button onClick={defineWord} disabled={loadingSearch}>\n            {loadingSearch ? 'Searching…' : 'Search'}\n          </button>\n          {vocabDef && (\n            <div className=\"generated-output\">{vocabDef}</div>\n          )}\n          {vocabDef && <button onClick={saveVocab}>Save</button>}\n          {savedVocabList.length > 0 && (\n            <div className=\"generated-output\">\n              <h3>Saved Vocab</h3>\n              <ul className=\"extracted-list\">\n                {savedVocabList.map(v => (\n                  <li key={v._id}>\n                    {new Date(v.createdAt).toLocaleString()}: {v.word} –{' '}\n                    {v.definition}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </section>\n\n        <section className=\"section\">\n          <h2>Manual Vocab</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Word…\"\n            value={manualWord}\n            onChange={e => setManualWord(e.target.value)}\n          />\n          <textarea\n            rows=\"3\"\n            placeholder=\"Meaning…\"\n            value={manualMeaning}\n            onChange={e => setManualMeaning(e.target.value)}\n          />\n          <div className=\"action-buttons\">\n            <button onClick={saveManual}>Save</button>\n            <button\n              onClick={() => {\n                setManualWord('');\n                setManualMeaning('');\n              }}\n            >\n              Clear\n            </button>\n          </div>\n        </section>\n      </div>\n\n      {/* Extract Row: Manual & AI Extraction */}\n      <div className=\"extract-row\">\n        <section className=\"section\">\n          <h2>Extract Vocab (Manual)</h2>\n          <textarea\n            rows=\"4\"\n            placeholder=\"Paste a paragraph…\"\n            value={manualText}\n            onChange={e => setManualText(e.target.value)}\n          />\n          <div className=\"action-buttons\">\n            <button onClick={extractManual} disabled={loadingExtractManual}>\n              {loadingExtractManual ? 'Extracting…' : 'Extract'}\n            </button>\n            <button\n              onClick={() => {\n                setManualText('');\n                setExtractedManual([]);\n              }}\n            >\n              Clear\n            </button>\n          </div>\n          {extractedManual.length > 0 && (\n            <>\n              <ul className=\"extracted-list\">\n                {extractedManual.map(w => (\n                  <li key={w}>{w}</li>\n                ))}\n              </ul>\n              <button onClick={saveExtractedManual}>Save All</button>\n            </>\n          )}\n        </section>\n\n        <section className=\"section\">\n          <h2>Extract Vocab (AI)</h2>\n          <div className=\"action-buttons\">\n            <button onClick={generateAiPara} disabled={loadingGenAiPara}>\n              {loadingGenAiPara ? 'Generating…' : 'Generate Paragraph'}\n            </button>\n            <button\n              onClick={() => {\n                setAiParagraph('');\n                setExtractedAi([]);\n              }}\n            >\n              Clear\n            </button>\n          </div>\n          {aiParagraph && (\n            <div className=\"generated-output\">{aiParagraph}</div>\n          )}\n          {aiParagraph && (\n            <button onClick={extractAi} disabled={loadingExtractAi}>\n              {loadingExtractAi ? 'Extracting…' : 'Extract'}\n            </button>\n          )}\n          {extractedAi.length > 0 && (\n            <>\n              <ul className=\"extracted-list\">\n                {extractedAi.map(w => (\n                  <li key={w}>{w}</li>\n                ))}\n              </ul>\n              <button onClick={saveExtractedAi}>Save All</button>\n            </>\n          )}\n        </section>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}