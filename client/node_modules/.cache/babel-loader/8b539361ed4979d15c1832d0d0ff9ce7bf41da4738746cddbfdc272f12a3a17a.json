{"ast":null,"code":"var _jsxFileName = \"/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js\",\n  _s = $RefreshSig$();\n// src/pages/StudyPage.js\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudyPage() {\n  _s();\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const fileInputRef = useRef(null);\n  const bgStyle = {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages4.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat'\n  };\n  const [rawNotes, setRawNotes] = useState('');\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [loadingSum, setLoadingSum] = useState(false);\n  const [text, setText] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [paraphrase, setParaphrase] = useState('');\n  const [loadingPara, setLoadingPara] = useState(false);\n  const [searchWord, setSearchWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingSearch, setLoadingSearch] = useState(false);\n  const [generatedWord, setGeneratedWord] = useState('');\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [message, setMessage] = useState('');\n  const showPopup = (msg = '✅ Saved Successfully!') => {\n    setMessage(msg);\n    setShowModal(true);\n    setTimeout(() => setShowModal(false), 1500);\n  };\n  const saveToServer = async (url, body) => {\n    try {\n      await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      showPopup();\n    } catch {\n      showPopup('❌ Error saving');\n    }\n  };\n  const genNotes = async () => {\n    setLoadingSum(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setRawNotes(note || '');\n    } catch {\n      showPopup('❌ Error generating');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const doSumm = async () => {\n    if (!rawNotes.trim() && !file) return showPopup('❌ Paste text or upload file');\n    setLoadingSum(true);\n    try {\n      let data;\n      if (rawNotes.trim()) {\n        data = await (await fetch('https://study-classmate-server.onrender.com/summarize-text', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: rawNotes\n          })\n        })).json();\n      } else {\n        const form = new FormData();\n        form.append('file', file);\n        data = await (await fetch('https://study-classmate-server.onrender.com/summarize', {\n          method: 'POST',\n          body: form\n        })).json();\n      }\n      setSummary(data.summary || '⚠️ No summary generated');\n    } catch {\n      showPopup('❌ Error summarising');\n      setSummary('❌ Error occurred');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const saveSum = () => {\n    if (!summary) return showPopup('❌ Nothing to save');\n    saveToServer('https://study-classmate-server.onrender.com/save-summary', {\n      username,\n      content: summary\n    });\n  };\n  const genExample = async () => {\n    setLoadingPara(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setText(note || '');\n    } catch {\n      showPopup('❌ Error generating');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const doPara = async () => {\n    if (!text.trim()) return showPopup('❌ Enter or generate text');\n    setLoadingPara(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/paraphrase-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text,\n          tone\n        })\n      });\n      const {\n        content\n      } = await res.json();\n      setParaphrase(content || '⚠️ No paraphrase result');\n    } catch {\n      showPopup('❌ Error paraphrasing');\n      setParaphrase('❌ Error occurred');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const savePara = () => {\n    if (!paraphrase) return showPopup('❌ Nothing to save');\n    saveToServer('https://study-classmate-server.onrender.com/save-paraphrase', {\n      username,\n      content: paraphrase,\n      tone\n    });\n  };\n  const searchDefinition = async () => {\n    if (!searchWord) return;\n    setLoadingSearch(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/define-word', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          word: searchWord\n        })\n      });\n      const data = await res.json();\n      if (data.content) {\n        setVocabDef(data.content);\n        setGeneratedWord(searchWord);\n      } else {\n        setVocabDef('No definition found.');\n      }\n    } catch (err) {\n      console.error(err);\n      setVocabDef('Error fetching definition.');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n  const saveSearchedVocab = async () => {\n    if (!searchWord.trim() || !vocabDef.trim()) {\n      return showPopup('❌ Nothing to save');\n    }\n    try {\n      await saveToServer('https://study-classmate-server.onrender.com/save-vocab', {\n        username,\n        word: searchWord,\n        definition: vocabDef\n      });\n      // saveToServer already calls showPopup('✅ ...') on success\n    } catch {\n      showPopup('❌ Error saving'); // fallback (rarely fired)\n    }\n  };\n  const saveManualVocab = () => {\n    if (!manualWord || !manualMeaning) return showPopup('❌ Fill both fields');\n    saveToServer('https://study-classmate-server.onrender.com/save-vocab', {\n      username,\n      word: manualWord,\n      definition: manualMeaning\n    });\n  };\n  const extractManual = async () => {\n    if (!manualText.trim()) return showPopup('❌ Enter text');\n    setLoadingExtractManual(true);\n    try {\n      var _resJson$words;\n      const res = await fetch('https://study-classmate-server.onrender.com/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: manualText\n        })\n      });\n      const resJson = await res.json();\n      const extracted = ((_resJson$words = resJson.words) === null || _resJson$words === void 0 ? void 0 : _resJson$words.words) || [];\n      setExtractedManual(extracted.length > 0 ? extracted : ['⚠️ No vocab found']);\n    } catch {\n      showPopup('❌ Extract failed');\n      setExtractedManual(['❌ Error occurred']);\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n  const generateAIPara = async () => {\n    setLoadingGenAiPara(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setAiParagraph(note || '');\n    } catch {\n      showPopup('❌ Error generating AI paragraph');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n  const extractFromAI = async () => {\n    if (!aiParagraph.trim()) return showPopup('❌ No AI paragraph yet');\n    setLoadingExtractAi(true);\n    try {\n      var _resJson$words2;\n      const res = await fetch('https://study-classmate-server.onrender.com/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: aiParagraph\n        })\n      });\n      const resJson = await res.json();\n      const extracted = ((_resJson$words2 = resJson.words) === null || _resJson$words2 === void 0 ? void 0 : _resJson$words2.words) || [];\n      setExtractedAi(extracted.length > 0 ? extracted : ['⚠️ No vocab found']);\n    } catch {\n      showPopup('❌ Extract failed');\n      setExtractedAi(['❌ Error occurred']);\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n  const saveExtractedManual = () => {\n    if (extractedManual.length === 0 || extractedManual[0].startsWith('⚠️') || extractedManual[0].startsWith('❌')) {\n      return showPopup('❌ Nothing to save');\n    }\n    saveToServer('https://study-classmate-server.onrender.com/save-vocab', {\n      username,\n      word: 'Manual Extract',\n      definition: extractedManual.join(', ')\n    });\n  };\n  const saveExtractedAi = () => {\n    if (extractedAi.length === 0 || extractedAi[0].startsWith('⚠️') || extractedAi[0].startsWith('❌')) {\n      return showPopup('❌ Nothing to save');\n    }\n    saveToServer('https://study-classmate-server.onrender.com/save-vocab', {\n      username,\n      word: 'AI Extract',\n      definition: extractedAi.join(', ')\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"study-page\",\n    style: bgStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/photos/home.jpg`,\n      alt: \"Home\",\n      className: \"study-home\",\n      onClick: () => navigate('/home2')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-header\",\n      children: \"Let's Study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), showModal && message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal show\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-btn\",\n          onClick: () => setShowModal(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Summarise Note \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveSum,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          value: rawNotes,\n          onChange: e => setRawNotes(e.target.value),\n          placeholder: \"Paste notes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          accept: \".txt,.pdf\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: genNotes,\n          disabled: loadingSum,\n          children: loadingSum ? 'Generating...' : 'Generate'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: doSumm,\n          disabled: loadingSum,\n          children: loadingSum ? 'Summarising...' : 'Summarise'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Paraphrase Note \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: savePara,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Type here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: tone,\n          onChange: e => setTone(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"casual\",\n            children: \"Casual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"academic\",\n            children: \"Academic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: genExample,\n          disabled: loadingPara,\n          children: loadingPara ? 'Generating...' : 'Generate Example'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: doPara,\n          disabled: loadingPara,\n          children: loadingPara ? 'Paraphrasing...' : 'Paraphrase'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), paraphrase && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: paraphrase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Vocab Search \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveSearchedVocab,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            setLoadingSearch(true);\n            try {\n              const res = await fetch('https://study-classmate-server.onrender.com/generate-word', {\n                method: 'POST'\n              });\n              const data = await res.json();\n              if (data.word) {\n                setSearchWord(data.word);\n                setGeneratedWord(data.word);\n\n                // Immediately call searchDefinition with new word\n                const defRes = await fetch('https://study-classmate-server.onrender.com/define-word', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    word: data.word\n                  })\n                });\n                const defData = await defRes.json();\n                setVocabDef(defData.content || 'No definition found.');\n              }\n            } catch (err) {\n              setMessage('❌ Failed to generate word');\n              setVocabDef('Error fetching definition.');\n            } finally {\n              setLoadingSearch(false);\n              setTimeout(() => setMessage(''), 1500);\n            }\n          },\n          disabled: loadingSearch,\n          children: loadingSearch ? 'Generating...' : '🎲 Generate Word'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchWord,\n          onChange: e => setSearchWord(e.target.value),\n          placeholder: \"Enter word...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: searchDefinition,\n          disabled: loadingSearch,\n          children: loadingSearch ? 'Searching...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), vocabDef && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-box\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: generatedWord\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 18\n            }, this), \": \", vocabDef]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Manual Vocab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: manualWord,\n          onChange: e => setManualWord(e.target.value),\n          placeholder: \"Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"2\",\n          value: manualMeaning,\n          onChange: e => setManualMeaning(e.target.value),\n          placeholder: \"Meaning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveManualVocab,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extract-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Extract from Manual Text \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveExtractedManual,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          value: manualText,\n          onChange: e => setManualText(e.target.value),\n          placeholder: \"Enter text...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: extractManual,\n          disabled: loadingExtractManual,\n          children: loadingExtractManual ? 'Extracting...' : 'Extract'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), extractedManual.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"extracted-list\",\n          children: extractedManual.map((w, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: w\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 46\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Extract from AI Paragraph \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveExtractedAi,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateAIPara,\n          disabled: loadingGenAiPara,\n          children: loadingGenAiPara ? 'Generating...' : 'Generate AI Paragraph'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), aiParagraph && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: aiParagraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: extractFromAI,\n          disabled: loadingExtractAi,\n          children: loadingExtractAi ? 'Extracting...' : 'Extract Vocab'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), extractedAi.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"extracted-list\",\n          children: extractedAi.map((w, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: w\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n_s(StudyPage, \"WkOB9pLUy5lLOc3FqqHyRVZ1Ahg=\", false, function () {\n  return [useNavigate];\n});\n_c = StudyPage;\nvar _c;\n$RefreshReg$(_c, \"StudyPage\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","jsxDEV","_jsxDEV","StudyPage","_s","navigate","username","localStorage","getItem","fileInputRef","bgStyle","backgroundImage","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","backgroundRepeat","rawNotes","setRawNotes","file","setFile","summary","setSummary","loadingSum","setLoadingSum","text","setText","tone","setTone","paraphrase","setParaphrase","loadingPara","setLoadingPara","searchWord","setSearchWord","vocabDef","setVocabDef","loadingSearch","setLoadingSearch","generatedWord","setGeneratedWord","manualWord","setManualWord","manualMeaning","setManualMeaning","manualText","setManualText","extractedManual","setExtractedManual","loadingExtractManual","setLoadingExtractManual","aiParagraph","setAiParagraph","extractedAi","setExtractedAi","loadingGenAiPara","setLoadingGenAiPara","loadingExtractAi","setLoadingExtractAi","showModal","setShowModal","message","setMessage","showPopup","msg","setTimeout","saveToServer","url","body","fetch","method","headers","JSON","stringify","genNotes","res","note","json","doSumm","trim","data","form","FormData","append","saveSum","content","genExample","doPara","savePara","searchDefinition","word","err","console","error","saveSearchedVocab","definition","saveManualVocab","extractManual","_resJson$words","resJson","extracted","words","length","generateAIPara","extractFromAI","_resJson$words2","saveExtractedManual","startsWith","join","saveExtractedAi","className","style","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","onChange","e","target","placeholder","type","ref","accept","files","disabled","defRes","defData","map","w","i","_c","$RefreshReg$"],"sources":["/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js"],"sourcesContent":["// src/pages/StudyPage.js\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\n\nexport default function StudyPage() {\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const fileInputRef = useRef(null);\n\n  const bgStyle = {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages4.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n  };\n\n  const [rawNotes, setRawNotes] = useState('');\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [loadingSum, setLoadingSum] = useState(false);\n\n  const [text, setText] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [paraphrase, setParaphrase] = useState('');\n  const [loadingPara, setLoadingPara] = useState(false);\n\n  const [searchWord, setSearchWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingSearch, setLoadingSearch] = useState(false);\n\n  const [generatedWord, setGeneratedWord] = useState('');\n\n\n\n\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n\n  const [showModal, setShowModal] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const showPopup = (msg = '✅ Saved Successfully!') => {\n    setMessage(msg);\n    setShowModal(true);\n    setTimeout(() => setShowModal(false), 1500);\n  };\n\n  const saveToServer = async (url, body) => {\n    try {\n      await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body),\n      });\n      showPopup();\n    } catch {\n      showPopup('❌ Error saving');\n    }\n  };\n\n  const genNotes = async () => {\n    setLoadingSum(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setRawNotes(note || '');\n    } catch {\n      showPopup('❌ Error generating');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n\n  const doSumm = async () => {\n    if (!rawNotes.trim() && !file) return showPopup('❌ Paste text or upload file');\n    setLoadingSum(true);\n    try {\n      let data;\n      if (rawNotes.trim()) {\n        data = await (await fetch('https://study-classmate-server.onrender.com/summarize-text', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ text: rawNotes })\n        })).json();\n      } else {\n        const form = new FormData();\n        form.append('file', file);\n        data = await (await fetch('https://study-classmate-server.onrender.com/summarize', {\n          method: 'POST',\n          body: form\n        })).json();\n      }\n      setSummary(data.summary || '⚠️ No summary generated');\n    } catch {\n      showPopup('❌ Error summarising');\n      setSummary('❌ Error occurred');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n\n  const saveSum = () => {\n    if (!summary) return showPopup('❌ Nothing to save');\n    saveToServer('https://study-classmate-server.onrender.com/save-summary', { username, content: summary });\n  };\n\n  const genExample = async () => {\n    setLoadingPara(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setText(note || '');\n    } catch {\n      showPopup('❌ Error generating');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n\n  const doPara = async () => {\n    if (!text.trim()) return showPopup('❌ Enter or generate text');\n    setLoadingPara(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/paraphrase-text', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text, tone })\n      });\n      const { content } = await res.json();\n      setParaphrase(content || '⚠️ No paraphrase result');\n    } catch {\n      showPopup('❌ Error paraphrasing');\n      setParaphrase('❌ Error occurred');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n\n  const savePara = () => {\n    if (!paraphrase) return showPopup('❌ Nothing to save');\n    saveToServer('https://study-classmate-server.onrender.com/save-paraphrase', { username, content: paraphrase, tone });\n  };\n\n  const searchDefinition = async () => {\n    if (!searchWord) return;\n    setLoadingSearch(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/define-word', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ word: searchWord })\n      });\n      const data = await res.json();\n      if (data.content) {\n        setVocabDef(data.content);\n        setGeneratedWord(searchWord);\n      } else {\n        setVocabDef('No definition found.');\n      }\n    } catch (err) {\n      console.error(err);\n      setVocabDef('Error fetching definition.');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n\n\n  const saveSearchedVocab = async () => {\n    if (!searchWord.trim() || !vocabDef.trim()) {\n      return showPopup('❌ Nothing to save');\n    }\n\n    try {\n      await saveToServer(\n        'https://study-classmate-server.onrender.com/save-vocab',\n        { username, word: searchWord, definition: vocabDef }\n      );\n      // saveToServer already calls showPopup('✅ ...') on success\n    } catch {\n      showPopup('❌ Error saving');  // fallback (rarely fired)\n    }\n  };\n\n\n  const saveManualVocab = () => {\n    if (!manualWord || !manualMeaning) return showPopup('❌ Fill both fields');\n    saveToServer('https://study-classmate-server.onrender.com/save-vocab', {\n      username, word: manualWord, definition: manualMeaning\n    });\n  };\n\n  const extractManual = async () => {\n    if (!manualText.trim()) return showPopup('❌ Enter text');\n    setLoadingExtractManual(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: manualText })\n      });\n      const resJson = await res.json();\n      const extracted = resJson.words?.words || [];\n      setExtractedManual(extracted.length > 0 ? extracted : ['⚠️ No vocab found']);\n\n    } catch {\n      showPopup('❌ Extract failed');\n      setExtractedManual(['❌ Error occurred']);\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n\n  const generateAIPara = async () => {\n    setLoadingGenAiPara(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setAiParagraph(note || '');\n    } catch {\n      showPopup('❌ Error generating AI paragraph');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n\n  const extractFromAI = async () => {\n    if (!aiParagraph.trim()) return showPopup('❌ No AI paragraph yet');\n    setLoadingExtractAi(true);\n    try {\n      const res = await fetch('https://study-classmate-server.onrender.com/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: aiParagraph })\n      });\n      \n      const resJson = await res.json();\n      const extracted = resJson.words?.words || [];\n      setExtractedAi(extracted.length > 0 ? extracted : ['⚠️ No vocab found']);\n\n    } catch {\n      showPopup('❌ Extract failed');\n      setExtractedAi(['❌ Error occurred']);\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\nconst saveExtractedManual = () => {\n  if (extractedManual.length === 0 || extractedManual[0].startsWith('⚠️') || extractedManual[0].startsWith('❌')) {\n    return showPopup('❌ Nothing to save');\n  }\n  saveToServer('https://study-classmate-server.onrender.com/save-vocab', {\n    username,\n    word: 'Manual Extract',\n    definition: extractedManual.join(', ')\n  });\n};\n\nconst saveExtractedAi = () => {\n  if (extractedAi.length === 0 || extractedAi[0].startsWith('⚠️') || extractedAi[0].startsWith('❌')) {\n    return showPopup('❌ Nothing to save');\n  }\n  saveToServer('https://study-classmate-server.onrender.com/save-vocab', {\n    username,\n    word: 'AI Extract',\n    definition: extractedAi.join(', ')\n  });\n};\n\n  return (\n    <div className=\"study-page\" style={bgStyle}>\n      <img src={`${process.env.PUBLIC_URL}/photos/home.jpg`} alt=\"Home\" className=\"study-home\" onClick={() => navigate('/home2')} />\n      <h1 className=\"main-header\">Let's Study</h1>\n      {showModal && message && (\n        <div className=\"modal show\">\n          <div className=\"modal-content\">\n            <span className=\"close-btn\" onClick={() => setShowModal(false)}>×</span>\n            \n            {message}\n          </div>\n        </div>\n      )}\n\n      {/* Summarise Section */}\n      <div className=\"top-row\">\n        <section className=\"section\">\n          <h2>Summarise Note <button onClick={saveSum}>Save</button></h2>\n          <textarea rows=\"4\" value={rawNotes} onChange={e => setRawNotes(e.target.value)} placeholder=\"Paste notes...\" />\n          <input type=\"file\" ref={fileInputRef} accept=\".txt,.pdf\" onChange={e => setFile(e.target.files[0])} />\n          <button onClick={genNotes} disabled={loadingSum}>{loadingSum ? 'Generating...' : 'Generate'}</button>\n          <button onClick={doSumm} disabled={loadingSum}>{loadingSum ? 'Summarising...' : 'Summarise'}</button>\n          {summary && <div className=\"generated-output\">{summary}</div>}\n        </section>\n\n        {/* Paraphrase Section */}\n        <section className=\"section\">\n          <h2>Paraphrase Note <button onClick={savePara}>Save</button></h2>\n          <textarea rows=\"4\" value={text} onChange={e => setText(e.target.value)} placeholder=\"Type here...\" />\n          <select value={tone} onChange={e => setTone(e.target.value)}>\n            <option value=\"casual\">Casual</option>\n            <option value=\"academic\">Academic</option>\n          </select>\n          <button onClick={genExample} disabled={loadingPara}>{loadingPara ? 'Generating...' : 'Generate Example'}</button>\n          <button onClick={doPara} disabled={loadingPara}>{loadingPara ? 'Paraphrasing...' : 'Paraphrase'}</button>\n          {paraphrase && <div className=\"generated-output\">{paraphrase}</div>}\n        </section>\n      </div>\n\n      {/* Vocab Section */}\n      <div className=\"middle-row\">\n        \n        <section className=\"section\">\n          <h2>Vocab Search <button onClick={saveSearchedVocab}>Save</button></h2>\n\n            <button\n              onClick={async () => {\n                setLoadingSearch(true);\n                try {\n                  const res = await fetch('https://study-classmate-server.onrender.com/generate-word', {\n                    method: 'POST'\n                  });\n                  const data = await res.json();\n                  if (data.word) {\n                    setSearchWord(data.word);\n                    setGeneratedWord(data.word);\n\n                    // Immediately call searchDefinition with new word\n                    const defRes = await fetch('https://study-classmate-server.onrender.com/define-word', {\n                      method: 'POST',\n                      headers: { 'Content-Type': 'application/json' },\n                      body: JSON.stringify({ word: data.word })\n                    });\n                    const defData = await defRes.json();\n                    setVocabDef(defData.content || 'No definition found.');\n                  }\n                } catch (err) {\n                  setMessage('❌ Failed to generate word');\n                  setVocabDef('Error fetching definition.');\n                } finally {\n                  setLoadingSearch(false);\n                  setTimeout(() => setMessage(''), 1500);\n                }\n              }}\n              disabled={loadingSearch}\n            >\n              {loadingSearch ? 'Generating...' : '🎲 Generate Word'}\n            </button>\n\n        \n          <input type=\"text\" value={searchWord} onChange={e => setSearchWord(e.target.value)} placeholder=\"Enter word...\" />\n            <button onClick={searchDefinition} disabled={loadingSearch}>\n              {loadingSearch ? 'Searching...' : 'Search'}\n          \n          </button>\n          {vocabDef && (\n            <div className=\"answer-box\">\n              <p><strong>{generatedWord}</strong>: {vocabDef}</p>\n            </div>\n          )}\n\n        </section>\n\n\n        <section className=\"section\">\n          <h2>Manual Vocab</h2>\n          <input type=\"text\" value={manualWord} onChange={e => setManualWord(e.target.value)} placeholder=\"Word\" />\n          <textarea rows=\"2\" value={manualMeaning} onChange={e => setManualMeaning(e.target.value)} placeholder=\"Meaning\" />\n          <button onClick={saveManualVocab}>Save</button>\n        </section>\n      </div>\n\n      {/* Extract Section */}\n      <div className=\"extract-row\">\n        {/* Manual Extract Section */}\n        <section className=\"section\">\n          <h2>Extract from Manual Text <button onClick={saveExtractedManual}>Save</button></h2>\n          <textarea rows=\"4\" value={manualText} onChange={e => setManualText(e.target.value)} placeholder=\"Enter text...\" />\n          <button onClick={extractManual} disabled={loadingExtractManual}>\n            {loadingExtractManual ? 'Extracting...' : 'Extract'}\n          </button>\n          {extractedManual.length > 0 && (\n            <ul className=\"extracted-list\">\n              {extractedManual.map((w, i) => <li key={i}>{w}</li>)}\n            </ul>\n          )}\n        </section>\n\n        {/* AI Extract Section */}\n        <section className=\"section\">\n          <h2>Extract from AI Paragraph <button onClick={saveExtractedAi}>Save</button></h2>\n          <button onClick={generateAIPara} disabled={loadingGenAiPara}>\n            {loadingGenAiPara ? 'Generating...' : 'Generate AI Paragraph'}\n          </button>\n          {aiParagraph && <div className=\"generated-output\">{aiParagraph}</div>}\n          <button onClick={extractFromAI} disabled={loadingExtractAi}>\n            {loadingExtractAi ? 'Extracting...' : 'Extract Vocab'}\n          </button>\n          {extractedAi.length > 0 && (\n            <ul className=\"extracted-list\">\n              {extractedAi.map((w, i) => <li key={i}>{w}</li>)}\n            </ul>\n          )}\n        </section>\n      </div>\n\n     \n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}