{"ast":null,"code":"var _jsxFileName = \"/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js\",\n  _s = $RefreshSig$();\n// src/pages/StudyPage.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StudyPage() {\n  _s();\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n\n  // Inline background style\n  const bgStyle = {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages4.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat'\n  };\n\n  // Summarise Note state\n  const [rawNotes, setRawNotes] = useState('');\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [loadingSum, setLoadingSum] = useState(false);\n\n  // Paraphrase Note state\n  const [text, setText] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [paraphrase, setParaphrase] = useState('');\n  const [loadingPara, setLoadingPara] = useState(false);\n  const [loadingGenPara, setLoadingGenPara] = useState(false);\n\n  // Vocab Search state\n  const [searchWord, setSearchWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingSearch, setLoadingSearch] = useState(false);\n  const [loadingGenWord, setLoadingGenWord] = useState(false);\n\n  // Manual Vocab Insert state\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n\n  // Manual Extraction state\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n\n  // AI Extraction state\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n\n  // UI message\n  const [message, setMessage] = useState('');\n\n  // ─── Summarise Note Handlers ─────────────────────────────────\n  const genNotes = async () => {\n    setLoadingSum(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setRawNotes(note || '');\n    } catch {\n      setMessage('Error generating notes');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const doSumm = async () => {\n    if (!rawNotes.trim() && !file) {\n      setMessage('Paste notes or choose a file');\n      return;\n    }\n    setLoadingSum(true);\n    setMessage('');\n    try {\n      let data;\n      if (rawNotes.trim()) {\n        data = await (await fetch('http://127.0.0.1:5001/summarize-text', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: rawNotes\n          })\n        })).json();\n      } else {\n        const form = new FormData();\n        form.append('file', file);\n        data = await (await fetch('http://127.0.0.1:5001/summarize', {\n          method: 'POST',\n          body: form\n        })).json();\n      }\n      setSummary(data.summary || '');\n    } catch {\n      setMessage('Error summarising');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const saveSum = async () => {\n    if (!summary) return;\n    await fetch('http://127.0.0.1:5001/save-summary', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        content: summary\n      })\n    });\n    setMessage('Summary saved');\n  };\n\n  // ─── Paraphrase Note Handlers ───────────────────────────────\n  const genPara = async () => {\n    setLoadingGenPara(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setText(note || '');\n    } catch {\n      setMessage('Error generating text');\n    } finally {\n      setLoadingGenPara(false);\n    }\n  };\n  const doPara = async () => {\n    if (!text.trim()) {\n      setMessage('Enter text');\n      return;\n    }\n    setLoadingPara(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/paraphrase', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text,\n          tone\n        })\n      });\n      const {\n        paraphrase\n      } = await res.json();\n      setParaphrase(paraphrase || '');\n    } catch {\n      setMessage('Error paraphrasing');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const savePara = async () => {\n    if (!paraphrase) return;\n    await fetch('http://127.0.0.1:5001/save-paraphrase', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        content: paraphrase,\n        tone\n      })\n    });\n    setMessage('Paraphrase saved');\n  };\n\n  // ─── Vocab Search Handlers ─────────────────────────────────\n  const genWord = async () => {\n    setLoadingGenWord(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-word', {\n        method: 'POST'\n      });\n      const {\n        word\n      } = await res.json();\n      setSearchWord(word || '');\n    } catch {\n      setMessage('Error generating word');\n    } finally {\n      setLoadingGenWord(false);\n    }\n  };\n  const defineWord = async () => {\n    if (!searchWord.trim()) {\n      setMessage('Enter a word');\n      return;\n    }\n    setLoadingSearch(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/define-word', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          word: searchWord.trim()\n        })\n      });\n      const {\n        content\n      } = await res.json();\n      setVocabDef(content || '');\n    } catch {\n      setMessage('Error defining word');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n  const saveVocab = async () => {\n    if (!searchWord || !vocabDef) return;\n    await fetch('http://127.0.0.1:5001/save-vocab', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        word: searchWord,\n        definition: vocabDef,\n        partOfSpeech: '',\n        example: '',\n        pronunciation: ''\n      })\n    });\n    setMessage('Vocab saved');\n  };\n\n  // ─── Manual Vocab Insert Handlers ─────────────────────────\n  const saveManual = async () => {\n    if (!manualWord.trim() || !manualMeaning.trim()) {\n      setMessage('Fill both fields');\n      return;\n    }\n    await fetch('http://127.0.0.1:5001/save-vocab', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        word: manualWord,\n        definition: manualMeaning,\n        partOfSpeech: '',\n        example: '',\n        pronunciation: ''\n      })\n    });\n    setMessage('Manual vocab saved');\n  };\n\n  // ─── Manual Extraction Handlers ──────────────────────────\n  const extractManual = async () => {\n    if (!manualText.trim()) {\n      setMessage('Paste a paragraph');\n      return;\n    }\n    setLoadingExtractManual(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: manualText\n        })\n      });\n      const {\n        words\n      } = await res.json();\n      setExtractedManual(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n  const clearManual = () => {\n    setManualText('');\n    setExtractedManual([]);\n    setMessage('');\n  };\n  const saveExtractedManual = async () => {\n    for (const w of extractedManual) {\n      await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          word: w,\n          definition: '',\n          partOfSpeech: '',\n          example: '',\n          pronunciation: ''\n        })\n      });\n    }\n    setMessage('Extracted vocab saved');\n  };\n\n  // ─── AI Extraction Handlers ──────────────────────────────\n  const generateAiPara = async () => {\n    setLoadingGenAiPara(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-paragraph', {\n        method: 'POST'\n      });\n      const {\n        paragraph\n      } = await res.json();\n      setAiParagraph(paragraph || '');\n    } catch {\n      setMessage('Error generating paragraph');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n  const extractAi = async () => {\n    if (!aiParagraph.trim()) {\n      setMessage('Generate a paragraph first');\n      return;\n    }\n    setLoadingExtractAi(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: aiParagraph\n        })\n      });\n      const {\n        words\n      } = await res.json();\n      setExtractedAi(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n  const clearAi = () => {\n    setAiParagraph('');\n    setExtractedAi([]);\n    setMessage('');\n  };\n  const saveExtractedAi = async () => {\n    for (const w of extractedAi) {\n      await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          word: w,\n          definition: '',\n          partOfSpeech: '',\n          example: '',\n          pronunciation: ''\n        })\n      });\n    }\n    setMessage('AI extracted vocab saved');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"study-page\",\n    style: bgStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/photos/home.jpg`,\n      className: \"streak-home\",\n      alt: \"Home\",\n      onClick: () => navigate('/home2')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-header\",\n      children: \"Let\\u2019s Study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Summarise Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          placeholder: \"Paste notes\\u2026\",\n          value: rawNotes,\n          onChange: e => setRawNotes(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRawNotes(''),\n            children: \"Clear Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: fileInputRef,\n            type: \"file\",\n            accept: \".txt,.pdf\",\n            onChange: e => setFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setFile(null);\n              fileInputRef.current.value = '';\n            },\n            children: \"Clear File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: genNotes,\n            disabled: loadingSum,\n            children: loadingSum ? '…Gen' : 'Generate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: doSumm,\n          disabled: loadingSum,\n          children: loadingSum ? '…Summ' : 'Summarise'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), summary && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: saveSum,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                navigator.clipboard.writeText(summary);\n                setMessage('Copied');\n              },\n              children: \"Copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSummary(''),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generated-output\",\n            dangerouslySetInnerHTML: {\n              __html: summary\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Paraphrase Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: genPara,\n            disabled: loadingGenPara,\n            children: loadingGenPara ? '…Gen' : 'Generate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setText(''),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          placeholder: \"Your text\\u2026\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: tone,\n            onChange: e => setTone(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"casual\",\n              children: \"Casual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"academic\",\n              children: \"Academic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: doPara,\n            disabled: loadingPara,\n            children: loadingPara ? '…Para' : 'Paraphrase'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), paraphrase && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: savePara,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                navigator.clipboard.writeText(paraphrase);\n                setMessage('Copied');\n              },\n              children: \"Copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setParaphrase(''),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generated-output\",\n            dangerouslySetInnerHTML: {\n              __html: paraphrase\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vocab Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: genWord,\n            disabled: loadingGenWord,\n            children: loadingGenWord ? '…Gen' : 'Generate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSearchWord('');\n              setVocabDef('');\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter word\\u2026\",\n          value: searchWord,\n          onChange: e => setSearchWord(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: defineWord,\n          disabled: loadingSearch,\n          children: loadingSearch ? '…Search' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), vocabDef && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"generated-output\",\n            children: vocabDef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveVocab,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My Vocab (Manual)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Word\\u2026\",\n          value: manualWord,\n          onChange: e => setManualWord(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          placeholder: \"Meaning\\u2026\",\n          value: manualMeaning,\n          onChange: e => setManualMeaning(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveManual,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setManualWord('');\n              setManualMeaning('');\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extract-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extract Vocab (Manual)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          placeholder: \"Paste a paragraph\\u2026\",\n          value: manualText,\n          onChange: e => setManualText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: extractManual,\n            disabled: loadingExtractManual,\n            children: loadingExtractManual ? 'Extracting…' : 'Extract'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-input-btn\",\n            onClick: clearManual,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), extractedManual.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"extracted-list\",\n            children: extractedManual.map(w => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: w\n            }, w, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 43\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveExtractedManual,\n            children: \"Save Extracted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extract Vocab (AI Paragraph)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: generateAiPara,\n            disabled: loadingGenAiPara,\n            children: loadingGenAiPara ? 'Generating…' : 'Generate Paragraph'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-input-btn\",\n            onClick: clearAi,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), aiParagraph && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: aiParagraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }, this), aiParagraph && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-row\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: extractAi,\n            disabled: loadingExtractAi,\n            children: loadingExtractAi ? 'Extracting…' : 'Extract Vocab'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), extractedAi.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"extracted-list\",\n            children: extractedAi.map(w => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: w\n            }, w, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 39\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveExtractedAi,\n            children: \"Save Extracted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n_s(StudyPage, \"Eq+ZCpNX0z2nfpih/mk7HkunKjw=\", false, function () {\n  return [useNavigate];\n});\n_c = StudyPage;\nvar _c;\n$RefreshReg$(_c, \"StudyPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","StudyPage","_s","navigate","fileInputRef","bgStyle","backgroundImage","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","backgroundRepeat","rawNotes","setRawNotes","file","setFile","summary","setSummary","loadingSum","setLoadingSum","text","setText","tone","setTone","paraphrase","setParaphrase","loadingPara","setLoadingPara","loadingGenPara","setLoadingGenPara","searchWord","setSearchWord","vocabDef","setVocabDef","loadingSearch","setLoadingSearch","loadingGenWord","setLoadingGenWord","manualWord","setManualWord","manualMeaning","setManualMeaning","manualText","setManualText","extractedManual","setExtractedManual","loadingExtractManual","setLoadingExtractManual","aiParagraph","setAiParagraph","extractedAi","setExtractedAi","loadingGenAiPara","setLoadingGenAiPara","loadingExtractAi","setLoadingExtractAi","message","setMessage","genNotes","res","fetch","method","note","json","doSumm","trim","data","headers","body","JSON","stringify","form","FormData","append","saveSum","content","genPara","doPara","savePara","genWord","word","defineWord","saveVocab","definition","partOfSpeech","example","pronunciation","saveManual","extractManual","words","clearManual","saveExtractedManual","w","generateAiPara","paragraph","extractAi","clearAi","saveExtractedAi","className","style","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","ref","type","accept","files","current","disabled","navigator","clipboard","writeText","dangerouslySetInnerHTML","__html","length","map","_c","$RefreshReg$"],"sources":["/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js"],"sourcesContent":["// src/pages/StudyPage.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\n\nexport default function StudyPage() {\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n\n  // Inline background style\n  const bgStyle = {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages4.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n  };\n\n  // Summarise Note state\n  const [rawNotes, setRawNotes]     = useState('');\n  const [file, setFile]             = useState(null);\n  const [summary, setSummary]       = useState('');\n  const [loadingSum, setLoadingSum] = useState(false);\n\n  // Paraphrase Note state\n  const [text, setText]               = useState('');\n  const [tone, setTone]               = useState('casual');\n  const [paraphrase, setParaphrase]   = useState('');\n  const [loadingPara, setLoadingPara] = useState(false);\n  const [loadingGenPara, setLoadingGenPara] = useState(false);\n\n  // Vocab Search state\n  const [searchWord, setSearchWord]         = useState('');\n  const [vocabDef, setVocabDef]             = useState('');\n  const [loadingSearch, setLoadingSearch]   = useState(false);\n  const [loadingGenWord, setLoadingGenWord] = useState(false);\n\n  // Manual Vocab Insert state\n  const [manualWord, setManualWord]       = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n\n  // Manual Extraction state\n  const [manualText, setManualText]           = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n\n  // AI Extraction state\n  const [aiParagraph, setAiParagraph]             = useState('');\n  const [extractedAi, setExtractedAi]             = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara]   = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi]   = useState(false);\n\n  // UI message\n  const [message, setMessage] = useState('');\n\n  // ─── Summarise Note Handlers ─────────────────────────────────\n  const genNotes = async () => {\n    setLoadingSum(true); setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setRawNotes(note || '');\n    } catch {\n      setMessage('Error generating notes');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const doSumm = async () => {\n    if (!rawNotes.trim() && !file) {\n      setMessage('Paste notes or choose a file');\n      return;\n    }\n    setLoadingSum(true); setMessage('');\n    try {\n      let data;\n      if (rawNotes.trim()) {\n        data = await (await fetch('http://127.0.0.1:5001/summarize-text', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ text: rawNotes })\n        })).json();\n      } else {\n        const form = new FormData(); form.append('file', file);\n        data = await (await fetch('http://127.0.0.1:5001/summarize', { method: 'POST', body: form })).json();\n      }\n      setSummary(data.summary || '');\n    } catch {\n      setMessage('Error summarising');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const saveSum = async () => {\n    if (!summary) return;\n    await fetch('http://127.0.0.1:5001/save-summary', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ content: summary })\n    });\n    setMessage('Summary saved');\n  };\n\n  // ─── Paraphrase Note Handlers ───────────────────────────────\n  const genPara = async () => {\n    setLoadingGenPara(true); setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setText(note || '');\n    } catch {\n      setMessage('Error generating text');\n    } finally {\n      setLoadingGenPara(false);\n    }\n  };\n  const doPara = async () => {\n    if (!text.trim()) { setMessage('Enter text'); return; }\n    setLoadingPara(true); setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/paraphrase', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text, tone })\n      });\n      const { paraphrase } = await res.json();\n      setParaphrase(paraphrase || '');\n    } catch {\n      setMessage('Error paraphrasing');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const savePara = async () => {\n    if (!paraphrase) return;\n    await fetch('http://127.0.0.1:5001/save-paraphrase', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ content: paraphrase, tone })\n    });\n    setMessage('Paraphrase saved');\n  };\n\n  // ─── Vocab Search Handlers ─────────────────────────────────\n  const genWord = async () => {\n    setLoadingGenWord(true); setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-word', { method: 'POST' });\n      const { word } = await res.json();\n      setSearchWord(word || '');\n    } catch {\n      setMessage('Error generating word');\n    } finally {\n      setLoadingGenWord(false);\n    }\n  };\n  const defineWord = async () => {\n    if (!searchWord.trim()) { setMessage('Enter a word'); return; }\n    setLoadingSearch(true); setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/define-word', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ word: searchWord.trim() })\n      });\n      const { content } = await res.json();\n      setVocabDef(content || '');\n    } catch {\n      setMessage('Error defining word');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n  const saveVocab = async () => {\n    if (!searchWord || !vocabDef) return;\n    await fetch('http://127.0.0.1:5001/save-vocab', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        word: searchWord,\n        definition: vocabDef,\n        partOfSpeech: '',\n        example: '',\n        pronunciation: ''\n      })\n    });\n    setMessage('Vocab saved');\n  };\n\n  // ─── Manual Vocab Insert Handlers ─────────────────────────\n  const saveManual = async () => {\n    if (!manualWord.trim() || !manualMeaning.trim()) {\n      setMessage('Fill both fields'); return;\n    }\n    await fetch('http://127.0.0.1:5001/save-vocab', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        word: manualWord,\n        definition: manualMeaning,\n        partOfSpeech: '',\n        example: '',\n        pronunciation: ''\n      })\n    });\n    setMessage('Manual vocab saved');\n  };\n\n  // ─── Manual Extraction Handlers ──────────────────────────\n  const extractManual = async () => {\n    if (!manualText.trim()) { setMessage('Paste a paragraph'); return; }\n    setLoadingExtractManual(true); setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: manualText })\n      });\n      const { words } = await res.json();\n      setExtractedManual(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n  const clearManual = () => { setManualText(''); setExtractedManual([]); setMessage(''); };\n  const saveExtractedManual = async () => {\n    for (const w of extractedManual) {\n      await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          word: w,\n          definition: '',\n          partOfSpeech: '',\n          example: '',\n          pronunciation: ''\n        })\n      });\n    }\n    setMessage('Extracted vocab saved');\n  };\n\n  // ─── AI Extraction Handlers ──────────────────────────────\n  const generateAiPara = async () => {\n    setLoadingGenAiPara(true); setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-paragraph', { method: 'POST' });\n      const { paragraph } = await res.json();\n      setAiParagraph(paragraph || '');\n    } catch {\n      setMessage('Error generating paragraph');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n  const extractAi = async () => {\n    if (!aiParagraph.trim()) { setMessage('Generate a paragraph first'); return; }\n    setLoadingExtractAi(true); setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: aiParagraph })\n      });\n      const { words } = await res.json();\n      setExtractedAi(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n  const clearAi = () => { setAiParagraph(''); setExtractedAi([]); setMessage(''); };\n  const saveExtractedAi = async () => {\n    for (const w of extractedAi) {\n      await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          word: w,\n          definition: '',\n          partOfSpeech: '',\n          example: '',\n          pronunciation: ''\n        })\n      });\n    }\n    setMessage('AI extracted vocab saved');\n  };\n\n  return (\n    <div className=\"study-page\" style={bgStyle}>\n      <img\n        src={`${process.env.PUBLIC_URL}/photos/home.jpg`}\n        className=\"streak-home\"\n        alt=\"Home\"\n        onClick={() => navigate('/home2')}\n      />\n      <h1 className=\"main-header\">Let’s Study</h1>\n      {message && <div className=\"message\">{message}</div>}\n\n      {/* Top row: Summarise & Paraphrase */}\n      <div className=\"top-row\">\n        {/* Summarise Panel */}\n        <div className=\"section\">\n          <h2>Summarise Note</h2>\n          <textarea\n            rows=\"4\"\n            placeholder=\"Paste notes…\"\n            value={rawNotes}\n            onChange={e => setRawNotes(e.target.value)}\n          />\n          <div className=\"controls-row\">\n            <button onClick={() => setRawNotes('')}>Clear Text</button>\n            <input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\".txt,.pdf\"\n              onChange={e => setFile(e.target.files[0])}\n            />\n            <button\n              onClick={() => {\n                setFile(null);\n                fileInputRef.current.value = '';\n              }}\n            >\n              Clear File\n            </button>\n            <button onClick={genNotes} disabled={loadingSum}>\n              {loadingSum ? '…Gen' : 'Generate'}\n            </button>\n          </div>\n          <button onClick={doSumm} disabled={loadingSum}>\n            {loadingSum ? '…Summ' : 'Summarise'}\n          </button>\n          {summary && (\n            <>\n              <div className=\"action-buttons\">\n                <button onClick={saveSum}>Save</button>\n                <button\n                  onClick={() => {\n                    navigator.clipboard.writeText(summary);\n                    setMessage('Copied');\n                  }}\n                >\n                  Copy\n                </button>\n                <button onClick={() => setSummary('')}>Clear</button>\n              </div>\n              <div\n                className=\"generated-output\"\n                dangerouslySetInnerHTML={{ __html: summary }}\n              />\n            </>\n          )}\n        </div>\n\n        {/* Paraphrase Panel */}\n        <div className=\"section\">\n          <h2>Paraphrase Note</h2>\n          <div className=\"controls-row\">\n            <button onClick={genPara} disabled={loadingGenPara}>\n              {loadingGenPara ? '…Gen' : 'Generate'}\n            </button>\n            <button onClick={() => setText('')}>Clear</button>\n          </div>\n          <textarea\n            rows=\"4\"\n            placeholder=\"Your text…\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n          />\n          <div className=\"controls-row\">\n            <select value={tone} onChange={e => setTone(e.target.value)}>\n              <option value=\"casual\">Casual</option>\n              <option value=\"academic\">Academic</option>\n            </select>\n            <button onClick={doPara} disabled={loadingPara}>\n              {loadingPara ? '…Para' : 'Paraphrase'}\n            </button>\n          </div>\n          {paraphrase && (\n            <>\n              <div className=\"action-buttons\">\n                <button onClick={savePara}>Save</button>\n                <button\n                  onClick={() => {\n                    navigator.clipboard.writeText(paraphrase);\n                    setMessage('Copied');\n                  }}\n                >\n                  Copy\n                </button>\n                <button onClick={() => setParaphrase('')}>Clear</button>\n              </div>\n              <div\n                className=\"generated-output\"\n                dangerouslySetInnerHTML={{ __html: paraphrase }}\n              />\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Middle row: Vocab Search & Manual Insert */}\n      <div className=\"middle-row\">\n        {/* Vocab Search Panel */}\n        <div className=\"section\">\n          <h2>Vocab Search</h2>\n          <div className=\"controls-row\">\n            <button onClick={genWord} disabled={loadingGenWord}>\n              {loadingGenWord ? '…Gen' : 'Generate'}\n            </button>\n            <button onClick={() => { setSearchWord(''); setVocabDef(''); }}>\n              Clear\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter word…\"\n            value={searchWord}\n            onChange={e => setSearchWord(e.target.value)}\n          />\n          <button onClick={defineWord} disabled={loadingSearch}>\n            {loadingSearch ? '…Search' : 'Search'}\n          </button>\n          {vocabDef && (\n            <>\n              <div className=\"generated-output\">{vocabDef}</div>\n              <button onClick={saveVocab}>Save</button>\n            </>\n          )}\n        </div>\n\n        {/* Manual Vocab Insert Panel */}\n        <div className=\"section\">\n          <h2>My Vocab (Manual)</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Word…\"\n            value={manualWord}\n            onChange={e => setManualWord(e.target.value)}\n          />\n          <textarea\n            rows=\"3\"\n            placeholder=\"Meaning…\"\n            value={manualMeaning}\n            onChange={e => setManualMeaning(e.target.value)}\n          />\n          <div className=\"controls-row\">\n            <button onClick={saveManual}>Save</button>\n            <button onClick={() => { setManualWord(''); setManualMeaning(''); }}>\n              Reset\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Extraction row: Manual & AI */}\n      <div className=\"extract-row\">\n        {/* Manual Extraction Panel */}\n        <div className=\"section\">\n          <h2>Extract Vocab (Manual)</h2>\n          <textarea\n            rows=\"4\"\n            placeholder=\"Paste a paragraph…\"\n            value={manualText}\n            onChange={e => setManualText(e.target.value)}\n          />\n          <div className=\"controls-row\">\n            <button onClick={extractManual} disabled={loadingExtractManual}>\n              {loadingExtractManual ? 'Extracting…' : 'Extract'}\n            </button>\n            <button className=\"clear-input-btn\" onClick={clearManual}>\n              Clear\n            </button>\n          </div>\n          {extractedManual.length > 0 && (\n            <>\n              <ul className=\"extracted-list\">\n                {extractedManual.map(w => <li key={w}>{w}</li>)}\n              </ul>\n              <button onClick={saveExtractedManual}>Save Extracted</button>\n            </>\n          )}\n        </div>\n\n        {/* AI Extraction Panel */}\n        <div className=\"section\">\n          <h2>Extract Vocab (AI Paragraph)</h2>\n          <div className=\"controls-row\">\n            <button onClick={generateAiPara} disabled={loadingGenAiPara}>\n              {loadingGenAiPara ? 'Generating…' : 'Generate Paragraph'}\n            </button>\n            <button className=\"clear-input-btn\" onClick={clearAi}>\n              Clear\n            </button>\n          </div>\n          {aiParagraph && (\n            <div className=\"generated-output\">{aiParagraph}</div>\n          )}\n          {aiParagraph && (\n            <div className=\"controls-row\">\n              <button onClick={extractAi} disabled={loadingExtractAi}>\n                {loadingExtractAi ? 'Extracting…' : 'Extract Vocab'}\n              </button>\n            </div>\n          )}\n          {extractedAi.length > 0 && (\n            <>\n              <ul className=\"extracted-list\">\n                {extractedAi.map(w => <li key={w}>{w}</li>)}\n              </ul>\n              <button onClick={saveExtractedAi}>Save Extracted</button>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}