{"ast":null,"code":"var _jsxFileName = \"/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js\",\n  _s = $RefreshSig$();\n// src/pages/StudyPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudyPage() {\n  _s();\n  const username = localStorage.getItem('username');\n  const navigate = useNavigate();\n\n  // Paraphrase Note state\n  const [text, setText] = useState('');\n  const [paraphrase, setParaphrase] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [loadingPara, setLoadingPara] = useState(false);\n\n  // Vocab Search state\n  const [searchWord, setSearchWord] = useState('');\n  const [generatedWord, setGeneratedWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingGenWord, setLoadingGenWord] = useState(false);\n  const [loadingSearch, setLoadingSearch] = useState(false);\n\n  // Manual Vocab state\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n\n  // Extract Vocab (Manual)\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n\n  // Extract Vocab (AI)\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n\n  // Modal state\n  const [showModal, setShowModal] = useState(false);\n  const [modalMsg, setModalMsg] = useState('');\n  const triggerModal = msg => {\n    setModalMsg(msg);\n    setShowModal(true);\n    setTimeout(() => setShowModal(false), 1500);\n  };\n\n  // ─── Paraphrase Note Handlers ─────────────────────────────────────────\n\n  const genExample = async () => {\n    setLoadingPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setText(note);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Gen failed');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const doPara = async () => {\n    if (!text) return triggerModal('Nothing to paraphrase');\n    setLoadingPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/paraphrase-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text,\n          tone\n        })\n      });\n      const {\n        content\n      } = await res.json();\n      setParaphrase(content);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Para failed');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const savePara = async () => {\n    if (!paraphrase) return triggerModal('Nothing to save');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/save-paraphrase', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          content: paraphrase,\n          tone\n        })\n      });\n      if (!res.ok) throw new Error(await res.text());\n      triggerModal('Paraphrase saved!');\n      navigate('/savepage');\n    } catch (err) {\n      console.error(err);\n      triggerModal('Save failed');\n    }\n  };\n\n  // ─── Vocab Search Handlers ────────────────────────────────────────────\n\n  const genWord = async () => {\n    setLoadingGenWord(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-word', {\n        method: 'POST'\n      });\n      const {\n        word\n      } = await res.json();\n      setGeneratedWord(word);\n      setSearchWord(word);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Gen failed');\n    } finally {\n      setLoadingGenWord(false);\n    }\n  };\n  const defineWord = async () => {\n    if (!searchWord) return triggerModal('Enter a word');\n    setLoadingSearch(true);\n    try {\n      const res = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`);\n      const data = await res.json();\n      const def = data[0].meanings[0].definitions[0].definition;\n      setVocabDef(def);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Search failed');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n  const saveVocab = async () => {\n    const word = searchWord || generatedWord;\n    if (!word || !vocabDef) return triggerModal('Nothing to save');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          word,\n          definition: vocabDef,\n          partOfSpeech: '',\n          example: '',\n          pronunciation: ''\n        })\n      });\n      if (!res.ok) throw new Error(await res.text());\n      triggerModal('Vocab saved!');\n      navigate('/savepage');\n    } catch (err) {\n      console.error(err);\n      triggerModal('Save failed');\n    }\n  };\n\n  // ─── Manual Vocab Handler ─────────────────────────────────────────────\n\n  const saveManual = async () => {\n    if (!manualWord || !manualMeaning) return triggerModal('Enter word & meaning');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          word: manualWord,\n          definition: manualMeaning,\n          partOfSpeech: '',\n          example: '',\n          pronunciation: ''\n        })\n      });\n      if (!res.ok) throw new Error(await res.text());\n      triggerModal('Manual vocab saved!');\n      navigate('/savepage');\n    } catch (err) {\n      console.error(err);\n      triggerModal('Save failed');\n    }\n  };\n\n  // ─── Extract Vocab (Manual) Handlers ────────────────────────────────\n\n  const extractManual = async () => {\n    if (!manualText) return triggerModal('Enter text');\n    setLoadingExtractManual(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: manualText\n        })\n      });\n      const {\n        words\n      } = await res.json();\n      setExtractedManual(words);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Extract failed');\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n  const saveExtractedManual = async () => {\n    if (extractedManual.length === 0) return triggerModal('No words to save');\n    try {\n      await Promise.all(extractedManual.map(w => fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          word: w,\n          definition: '',\n          partOfSpeech: '',\n          example: '',\n          pronunciation: ''\n        })\n      })));\n      triggerModal('Extracted words saved!');\n      navigate('/savepage');\n    } catch (err) {\n      console.error(err);\n      triggerModal('Save failed');\n    }\n  };\n\n  // ─── Extract Vocab (AI) Handlers ────────────────────────────────────\n\n  const generateAiPara = async () => {\n    setLoadingGenAiPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setAiParagraph(note);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Gen failed');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n  const extractAi = async () => {\n    if (!aiParagraph) return triggerModal('No paragraph');\n    setLoadingExtractAi(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: aiParagraph\n        })\n      });\n      const {\n        words\n      } = await res.json();\n      setExtractedAi(words);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Extract failed');\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n  const saveExtractedAi = saveExtractedManual;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"study-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-row\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Paraphrase Note\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: savePara,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: genExample,\n            disabled: loadingPara,\n            children: loadingPara ? 'Gen…' : 'Gen'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: doPara,\n            disabled: loadingPara,\n            children: loadingPara ? 'Para…' : 'Para'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setText(''),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter or generate\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: tone,\n          onChange: e => setTone(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"casual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"academic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), paraphrase && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: paraphrase\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Vocab Search\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: saveVocab,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: genWord,\n            disabled: loadingGenWord,\n            children: loadingGenWord ? 'Gen…' : 'Gen'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSearchWord('');\n              setVocabDef('');\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchWord,\n          onChange: e => setSearchWord(e.target.value),\n          placeholder: \"Enter word\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: defineWord,\n          disabled: loadingSearch,\n          children: loadingSearch ? 'Search…' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), vocabDef && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: vocabDef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Manual Vocab\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: saveManual,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: manualWord,\n          onChange: e => setManualWord(e.target.value),\n          placeholder: \"Word\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          value: manualMeaning,\n          onChange: e => setManualMeaning(e.target.value),\n          placeholder: \"Meaning\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extract-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Extract Vocab (Manual)\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: saveExtractedManual,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          value: manualText,\n          onChange: e => setManualText(e.target.value),\n          placeholder: \"Paste paragraph\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: extractManual,\n            disabled: loadingExtractManual,\n            children: loadingExtractManual ? 'Ext…' : 'Ext'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setManualText('');\n              setExtractedManual([]);\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), extractedManual.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"extracted-list\",\n          children: extractedManual.map(w => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: w\n          }, w, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Extract Vocab (AI)\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: saveExtractedAi,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: generateAiPara,\n            disabled: loadingGenAiPara,\n            children: loadingGenAiPara ? 'Gen…' : 'Gen'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setAiParagraph('');\n              setExtractedAi([]);\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), aiParagraph && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: aiParagraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), aiParagraph && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: extractAi,\n          disabled: loadingExtractAi,\n          children: loadingExtractAi ? 'Ext…' : 'Ext'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this), extractedAi.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"extracted-list\",\n          children: extractedAi.map(w => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: w\n          }, w, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal ${showModal ? 'show' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: modalMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(StudyPage, \"AiEqsoy1ikzqA5NCcPXtarhvNQ0=\", false, function () {\n  return [useNavigate];\n});\n_c = StudyPage;\nvar _c;\n$RefreshReg$(_c, \"StudyPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","StudyPage","_s","username","localStorage","getItem","navigate","text","setText","paraphrase","setParaphrase","tone","setTone","loadingPara","setLoadingPara","searchWord","setSearchWord","generatedWord","setGeneratedWord","vocabDef","setVocabDef","loadingGenWord","setLoadingGenWord","loadingSearch","setLoadingSearch","manualWord","setManualWord","manualMeaning","setManualMeaning","manualText","setManualText","extractedManual","setExtractedManual","loadingExtractManual","setLoadingExtractManual","aiParagraph","setAiParagraph","extractedAi","setExtractedAi","loadingGenAiPara","setLoadingGenAiPara","loadingExtractAi","setLoadingExtractAi","showModal","setShowModal","modalMsg","setModalMsg","triggerModal","msg","setTimeout","genExample","res","fetch","method","note","json","err","console","error","doPara","headers","body","JSON","stringify","content","savePara","ok","Error","genWord","word","defineWord","data","def","meanings","definitions","definition","saveVocab","partOfSpeech","example","pronunciation","saveManual","extractManual","words","saveExtractedManual","length","Promise","all","map","w","generateAiPara","extractAi","saveExtractedAi","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","rows","value","onChange","e","target","placeholder","dangerouslySetInnerHTML","__html","type","_c","$RefreshReg$"],"sources":["/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js"],"sourcesContent":["// src/pages/StudyPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\n\nexport default function StudyPage() {\n  const username = localStorage.getItem('username');\n  const navigate = useNavigate();\n\n  // Paraphrase Note state\n  const [text, setText] = useState('');\n  const [paraphrase, setParaphrase] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [loadingPara, setLoadingPara] = useState(false);\n\n  // Vocab Search state\n  const [searchWord, setSearchWord] = useState('');\n  const [generatedWord, setGeneratedWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingGenWord, setLoadingGenWord] = useState(false);\n  const [loadingSearch, setLoadingSearch] = useState(false);\n\n  // Manual Vocab state\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n\n  // Extract Vocab (Manual)\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n\n  // Extract Vocab (AI)\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n\n  // Modal state\n  const [showModal, setShowModal] = useState(false);\n  const [modalMsg, setModalMsg] = useState('');\n\n  const triggerModal = (msg) => {\n    setModalMsg(msg);\n    setShowModal(true);\n    setTimeout(() => setShowModal(false), 1500);\n  };\n\n  // ─── Paraphrase Note Handlers ─────────────────────────────────────────\n\n  const genExample = async () => {\n    setLoadingPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setText(note);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Gen failed');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n\n  const doPara = async () => {\n    if (!text) return triggerModal('Nothing to paraphrase');\n    setLoadingPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/paraphrase-text', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text, tone })\n      });\n      const { content } = await res.json();\n      setParaphrase(content);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Para failed');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n\n  const savePara = async () => {\n    if (!paraphrase) return triggerModal('Nothing to save');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/save-paraphrase', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, content: paraphrase, tone })\n      });\n      if (!res.ok) throw new Error(await res.text());\n      triggerModal('Paraphrase saved!');\n      navigate('/savepage');\n    } catch (err) {\n      console.error(err);\n      triggerModal('Save failed');\n    }\n  };\n\n  // ─── Vocab Search Handlers ────────────────────────────────────────────\n\n  const genWord = async () => {\n    setLoadingGenWord(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-word', { method: 'POST' });\n      const { word } = await res.json();\n      setGeneratedWord(word);\n      setSearchWord(word);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Gen failed');\n    } finally {\n      setLoadingGenWord(false);\n    }\n  };\n\n  const defineWord = async () => {\n    if (!searchWord) return triggerModal('Enter a word');\n    setLoadingSearch(true);\n    try {\n      const res = await fetch(\n        `https://api.dictionaryapi.dev/api/v2/entries/en/${searchWord}`\n      );\n      const data = await res.json();\n      const def = data[0].meanings[0].definitions[0].definition;\n      setVocabDef(def);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Search failed');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n\n  const saveVocab = async () => {\n    const word = searchWord || generatedWord;\n    if (!word || !vocabDef) return triggerModal('Nothing to save');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          username,\n          word,\n          definition: vocabDef,\n          partOfSpeech: '',\n          example: '',\n          pronunciation: ''\n        })\n      });\n      if (!res.ok) throw new Error(await res.text());\n      triggerModal('Vocab saved!');\n      navigate('/savepage');\n    } catch (err) {\n      console.error(err);\n      triggerModal('Save failed');\n    }\n  };\n\n  // ─── Manual Vocab Handler ─────────────────────────────────────────────\n\n  const saveManual = async () => {\n    if (!manualWord || !manualMeaning)\n      return triggerModal('Enter word & meaning');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          username,\n          word: manualWord,\n          definition: manualMeaning,\n          partOfSpeech: '',\n          example: '',\n          pronunciation: ''\n        })\n      });\n      if (!res.ok) throw new Error(await res.text());\n      triggerModal('Manual vocab saved!');\n      navigate('/savepage');\n    } catch (err) {\n      console.error(err);\n      triggerModal('Save failed');\n    }\n  };\n\n  // ─── Extract Vocab (Manual) Handlers ────────────────────────────────\n\n  const extractManual = async () => {\n    if (!manualText) return triggerModal('Enter text');\n    setLoadingExtractManual(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: manualText })\n      });\n      const { words } = await res.json();\n      setExtractedManual(words);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Extract failed');\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n\n  const saveExtractedManual = async () => {\n    if (extractedManual.length === 0)\n      return triggerModal('No words to save');\n    try {\n      await Promise.all(\n        extractedManual.map((w) =>\n          fetch('http://127.0.0.1:5001/save-vocab', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              username,\n              word: w,\n              definition: '',\n              partOfSpeech: '',\n              example: '',\n              pronunciation: ''\n            })\n          })\n        )\n      );\n      triggerModal('Extracted words saved!');\n      navigate('/savepage');\n    } catch (err) {\n      console.error(err);\n      triggerModal('Save failed');\n    }\n  };\n\n  // ─── Extract Vocab (AI) Handlers ────────────────────────────────────\n\n  const generateAiPara = async () => {\n    setLoadingGenAiPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', {\n        method: 'POST'\n      });\n      const { note } = await res.json();\n      setAiParagraph(note);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Gen failed');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n\n  const extractAi = async () => {\n    if (!aiParagraph) return triggerModal('No paragraph');\n    setLoadingExtractAi(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: aiParagraph })\n      });\n      const { words } = await res.json();\n      setExtractedAi(words);\n    } catch (err) {\n      console.error(err);\n      triggerModal('Extract failed');\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n\n  const saveExtractedAi = saveExtractedManual;\n\n  return (\n    <div className=\"study-page\">\n      {/* Paraphrase Note */}\n      <div className=\"top-row\">\n        <section className=\"section\">\n          <h2>\n            Paraphrase Note{' '}\n            <button className=\"btn\" onClick={savePara}>\n              Save\n            </button>\n          </h2>\n          <div className=\"action-buttons\">\n            <button onClick={genExample} disabled={loadingPara}>\n              {loadingPara ? 'Gen…' : 'Gen'}\n            </button>\n            <button onClick={doPara} disabled={loadingPara}>\n              {loadingPara ? 'Para…' : 'Para'}\n            </button>\n            <button onClick={() => setText('')}>Clear</button>\n          </div>\n          <textarea\n            rows=\"4\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Enter or generate…\"\n          />\n          <select\n            value={tone}\n            onChange={(e) => setTone(e.target.value)}\n          >\n            <option>casual</option>\n            <option>academic</option>\n          </select>\n          {paraphrase && (\n            <div className=\"generated-output\">\n              <div\n                dangerouslySetInnerHTML={{ __html: paraphrase }}\n              />\n            </div>\n          )}\n        </section>\n      </div>\n\n      {/* Vocab Search & Manual Vocab */}\n      <div className=\"middle-row\">\n        <section className=\"section\">\n          <h2>\n            Vocab Search{' '}\n            <button className=\"btn\" onClick={saveVocab}>\n              Save\n            </button>\n          </h2>\n          <div className=\"action-buttons\">\n            <button onClick={genWord} disabled={loadingGenWord}>\n              {loadingGenWord ? 'Gen…' : 'Gen'}\n            </button>\n            <button\n              onClick={() => {\n                setSearchWord('');\n                setVocabDef('');\n              }}\n            >\n              Clear\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            value={searchWord}\n            onChange={(e) => setSearchWord(e.target.value)}\n            placeholder=\"Enter word…\"\n          />\n          <button onClick={defineWord} disabled={loadingSearch}>\n            {loadingSearch ? 'Search…' : 'Search'}\n          </button>\n          {vocabDef && (\n            <div className=\"generated-output\">{vocabDef}</div>\n          )}\n        </section>\n\n        <section className=\"section\">\n          <h2>\n            Manual Vocab{' '}\n            <button className=\"btn\" onClick={saveManual}>\n              Save\n            </button>\n          </h2>\n          <input\n            type=\"text\"\n            value={manualWord}\n            onChange={(e) => setManualWord(e.target.value)}\n            placeholder=\"Word…\"\n          />\n          <textarea\n            rows=\"3\"\n            value={manualMeaning}\n            onChange={(e) => setManualMeaning(e.target.value)}\n            placeholder=\"Meaning…\"\n          />\n        </section>\n      </div>\n\n      {/* Extract Vocab */}\n      <div className=\"extract-row\">\n        <section className=\"section\">\n          <h2>\n            Extract Vocab (Manual){' '}\n            <button className=\"btn\" onClick={saveExtractedManual}>\n              Save\n            </button>\n          </h2>\n          <textarea\n            rows=\"4\"\n            value={manualText}\n            onChange={(e) => setManualText(e.target.value)}\n            placeholder=\"Paste paragraph…\"\n          />\n          <div className=\"action-buttons\">\n            <button\n              onClick={extractManual}\n              disabled={loadingExtractManual}\n            >\n              {loadingExtractManual ? 'Ext…' : 'Ext'}\n            </button>\n            <button\n              onClick={() => {\n                setManualText('');\n                setExtractedManual([]);\n              }}\n            >\n              Clear\n            </button>\n          </div>\n          {extractedManual.length > 0 && (\n            <ul className=\"extracted-list\">\n              {extractedManual.map((w) => (\n                <li key={w}>{w}</li>\n              ))}\n            </ul>\n          )}\n        </section>\n\n        <section className=\"section\">\n          <h2>\n            Extract Vocab (AI){' '}\n            <button className=\"btn\" onClick={saveExtractedAi}>\n              Save\n            </button>\n          </h2>\n          <div className=\"action-buttons\">\n            <button\n              onClick={generateAiPara}\n              disabled={loadingGenAiPara}\n            >\n              {loadingGenAiPara ? 'Gen…' : 'Gen'}\n            </button>\n            <button\n              onClick={() => {\n                setAiParagraph('');\n                setExtractedAi([]);\n              }}\n            >\n              Clear\n            </button>\n          </div>\n          {aiParagraph && (\n            <div className=\"generated-output\">{aiParagraph}</div>\n          )}\n          {aiParagraph && (\n            <button\n              onClick={extractAi}\n              disabled={loadingExtractAi}\n            >\n              {loadingExtractAi ? 'Ext…' : 'Ext'}\n            </button>\n          )}\n          {extractedAi.length > 0 && (\n            <ul className=\"extracted-list\">\n              {extractedAi.map((w) => (\n                <li key={w}>{w}</li>\n              ))}\n            </ul>\n          )}\n        </section>\n      </div>\n\n      {/* Glass-style Save Confirmation Modal */}\n      <div className={`modal ${showModal ? 'show' : ''}`}>\n        <div className=\"modal-content\">{modalMsg}</div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}