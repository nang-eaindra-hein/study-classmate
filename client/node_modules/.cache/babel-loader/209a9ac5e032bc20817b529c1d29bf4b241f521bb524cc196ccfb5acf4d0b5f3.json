{"ast":null,"code":"var _jsxFileName = \"/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StudyPage() {\n  _s();\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const fileInputRef = useRef(null);\n\n  // Inline background style\n  const bgStyle = {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages4.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat'\n  };\n\n  // Summarise Note state\n  const [rawNotes, setRawNotes] = useState('');\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [loadingSum, setLoadingSum] = useState(false);\n\n  // Paraphrase state\n  const [text, setText] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [paraphrase, setParaphrase] = useState('');\n  const [loadingPara, setLoadingPara] = useState(false);\n\n  // Vocab Search state\n  const [searchWord, setSearchWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingGenWord, setLoadingGenWord] = useState(false);\n  const [loadingSearch, setLoadingSearch] = useState(false);\n\n  // Manual Vocab Insert state\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n\n  // Manual Extraction state\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n\n  // AI Extraction state\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n\n  // UI message\n  const [message, setMessage] = useState('');\n\n  // Summarise Handlers\n  const genNotes = async () => {\n    setLoadingSum(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setRawNotes(note || '');\n    } catch {\n      setMessage('Error generating notes');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const doSumm = async () => {\n    if (!rawNotes.trim() && !file) {\n      setMessage('Paste notes or choose a file');\n      return;\n    }\n    setLoadingSum(true);\n    setMessage('');\n    try {\n      let data;\n      if (rawNotes.trim()) {\n        data = await fetch('http://127.0.0.1:5001/summarize-text', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: rawNotes\n          })\n        }).then(r => r.json());\n      } else {\n        const form = new FormData();\n        form.append('file', file);\n        data = await fetch('http://127.0.0.1:5001/summarize', {\n          method: 'POST',\n          body: form\n        }).then(r => r.json());\n      }\n      setSummary(data.summary || '');\n    } catch {\n      setMessage('Error summarising');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const saveSum = async () => {\n    if (!summary) return;\n    await fetch('http://127.0.0.1:5001/save-summary', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        content: summary\n      })\n    });\n    setMessage('Summary saved');\n  };\n\n  // Paraphrase Handlers\n  const doPara = async () => {\n    if (!text.trim()) {\n      setMessage('Enter text');\n      return;\n    }\n    setLoadingPara(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/paraphrase-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text,\n          tone\n        })\n      });\n      const {\n        content\n      } = await res.json();\n      setParaphrase(content || '');\n    } catch {\n      setMessage('Error paraphrasing');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const savePara = async () => {\n    if (!paraphrase) return;\n    await fetch('http://127.0.0.1:5001/save-paraphrase', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        content: paraphrase,\n        tone\n      })\n    });\n    setMessage('Paraphrase saved');\n  };\n\n  // Vocab Search Handlers\n  const genWord = async () => {\n    setLoadingGenWord(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-word', {\n        method: 'POST'\n      });\n      const {\n        word\n      } = await res.json();\n      setSearchWord(word || '');\n    } catch {\n      setMessage('Error generating word');\n    } finally {\n      setLoadingGenWord(false);\n    }\n  };\n  const defineWord = async () => {\n    if (!searchWord.trim()) {\n      setMessage('Enter a word');\n      return;\n    }\n    setLoadingSearch(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/define-word', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          word: searchWord.trim()\n        })\n      });\n      const {\n        content\n      } = await res.json();\n      setVocabDef(content || '');\n    } catch {\n      setMessage('Error defining word');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n  const saveVocab = async () => {\n    if (!searchWord || !vocabDef) return;\n    await fetch('http://127.0.0.1:5001/save-vocab', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        word: searchWord,\n        definition: vocabDef\n      })\n    });\n    setMessage('Vocab saved');\n  };\n\n  // Manual Vocab Insert\n  const saveManual = async () => {\n    if (!manualWord.trim() || !manualMeaning.trim()) {\n      setMessage('Fill both fields');\n      return;\n    }\n    await fetch('http://127.0.0.1:5001/save-vocab', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        word: manualWord,\n        definition: manualMeaning\n      })\n    });\n    setMessage('Manual vocab saved');\n  };\n\n  // Manual Extraction\n  const extractManual = async () => {\n    if (!manualText.trim()) {\n      setMessage('Paste a paragraph');\n      return;\n    }\n    setLoadingExtractManual(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: manualText\n        })\n      });\n      const {\n        words\n      } = await res.json();\n      setExtractedManual(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n  const clearManual = () => {\n    setManualText('');\n    setExtractedManual([]);\n    setMessage('');\n  };\n  const saveExtractedManual = async () => {\n    for (const w of extractedManual) {\n      await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          word: w,\n          definition: ''\n        })\n      });\n    }\n    setMessage('Extracted vocab saved');\n  };\n\n  // AI Extraction\n  const generateAiPara = async () => {\n    setLoadingGenAiPara(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setAiParagraph(note || '');\n    } catch {\n      setMessage('Error generating paragraph');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n  const extractAi = async () => {\n    if (!aiParagraph.trim()) {\n      setMessage('Generate paragraph first');\n      return;\n    }\n    setLoadingExtractAi(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: aiParagraph\n        })\n      });\n      const {\n        words\n      } = await res.json();\n      setExtractedAi(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n  const clearAi = () => {\n    setAiParagraph('');\n    setExtractedAi([]);\n    setMessage('');\n  };\n  const saveExtractedAi = async () => {\n    for (const w of extractedAi) {\n      await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          word: w,\n          definition: ''\n        })\n      });\n    }\n    setMessage('AI extracted vocab saved');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"study-page\",\n    style: bgStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/photos/home.jpg`,\n      alt: \"Home\",\n      className: \"home-icon\",\n      onClick: () => navigate('/home2')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-header\",\n      children: \"Let\\u2019s Study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Summarise Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        placeholder: \"Paste notes\\u2026\",\n        value: rawNotes,\n        onChange: e => setRawNotes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setRawNotes(''),\n          children: \"Clear Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          type: \"file\",\n          accept: \".txt,.pdf\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setFile(null);\n            fileInputRef.current.value = '';\n          },\n          children: \"Clear File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: genNotes,\n          disabled: loadingSum,\n          children: loadingSum ? 'Generating…' : 'Generate'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: doSumm,\n        disabled: loadingSum,\n        children: loadingSum ? 'Summarising…' : 'Summarise'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: summary\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveSum,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              navigator.clipboard.writeText(summary);\n              setMessage('Copied');\n            },\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSummary(''),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Paraphrase Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: genPara,\n          disabled: loadingGenPara,\n          children: loadingGenPara ? 'Generating…' : 'Paraphrase'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setText(''),\n          children: \"Clear Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        placeholder: \"Enter text\\u2026\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: tone,\n          onChange: e => setTone(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"casual\",\n            children: \"Casual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"academic\",\n            children: \"Academic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: doPara,\n          disabled: loadingPara,\n          children: loadingPara ? 'Paraphrasing…' : 'Paraphrase'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), paraphrase && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: paraphrase\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: savePara,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              navigator.clipboard.writeText(paraphrase);\n              setMessage('Copied');\n            },\n            children: \"Copy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setParaphrase(''),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vocab Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: genWord,\n            disabled: loadingGenWord,\n            children: loadingGenWord ? 'Generating…' : 'Generate'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSearchWord('');\n              setVocabDef('');\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter word\\u2026\",\n          value: searchWord,\n          onChange: e => setSearchWord(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: defineWord,\n          disabled: loadingSearch,\n          children: loadingSearch ? 'Searching…' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), vocabDef && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output\",\n          children: vocabDef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 24\n        }, this), vocabDef && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveVocab,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Manual Vocab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Word\\u2026\",\n          value: manualWord,\n          onChange: e => setManualWord(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          placeholder: \"Meaning\\u2026\",\n          value: manualMeaning,\n          onChange: e => setManualMeaning(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveManual,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setManualWord('');\n              setManualMeaning('');\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extract Vocab (Manual)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          placeholder: \"Paste a paragraph\\u2026\",\n          value: manualText,\n          onChange: e => setManualText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: extractManual,\n            disabled: loadingExtractManual,\n            children: loadingExtractManual ? 'Extracting…' : 'Extract'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearManual,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), extractedManual.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list\",\n            children: extractedManual.map(w => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: w\n            }, w, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 62\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveExtractedManual,\n            children: \"Save All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extract Vocab (AI)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: generateAiPara,\n            disabled: loadingGenAiPara,\n            children: loadingGenAiPara ? 'Generating…' : 'Generate Paragraph'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearAi,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), aiParagraph && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output\",\n          children: aiParagraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 27\n        }, this), aiParagraph && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: extractAi,\n          disabled: loadingExtractAi,\n          children: loadingExtractAi ? 'Extracting…' : 'Extract'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), extractedAi.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list\",\n            children: extractedAi.map(w => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: w\n            }, w, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 58\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveExtractedAi,\n            children: \"Save All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(StudyPage, \"4hIhbioppIyJsan0C7cWGKh13Do=\", false, function () {\n  return [useNavigate];\n});\n_c = StudyPage;\nvar _c;\n$RefreshReg$(_c, \"StudyPage\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","StudyPage","_s","navigate","username","localStorage","getItem","fileInputRef","bgStyle","backgroundImage","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","backgroundRepeat","rawNotes","setRawNotes","file","setFile","summary","setSummary","loadingSum","setLoadingSum","text","setText","tone","setTone","paraphrase","setParaphrase","loadingPara","setLoadingPara","searchWord","setSearchWord","vocabDef","setVocabDef","loadingGenWord","setLoadingGenWord","loadingSearch","setLoadingSearch","manualWord","setManualWord","manualMeaning","setManualMeaning","manualText","setManualText","extractedManual","setExtractedManual","loadingExtractManual","setLoadingExtractManual","aiParagraph","setAiParagraph","extractedAi","setExtractedAi","loadingGenAiPara","setLoadingGenAiPara","loadingExtractAi","setLoadingExtractAi","message","setMessage","genNotes","res","fetch","method","note","json","doSumm","trim","data","headers","body","JSON","stringify","then","r","form","FormData","append","saveSum","content","doPara","savePara","genWord","word","defineWord","saveVocab","definition","saveManual","extractManual","words","clearManual","saveExtractedManual","w","generateAiPara","extractAi","clearAi","saveExtractedAi","className","style","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","ref","type","accept","files","current","disabled","dangerouslySetInnerHTML","__html","navigator","clipboard","writeText","genPara","loadingGenPara","length","map","_c","$RefreshReg$"],"sources":["/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\n\nexport default function StudyPage() {\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const fileInputRef = useRef(null);\n\n  // Inline background style\n  const bgStyle = {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages4.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n  };\n\n  // Summarise Note state\n  const [rawNotes, setRawNotes] = useState('');\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [loadingSum, setLoadingSum] = useState(false);\n\n  // Paraphrase state\n  const [text, setText] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [paraphrase, setParaphrase] = useState('');\n  const [loadingPara, setLoadingPara] = useState(false);\n\n  // Vocab Search state\n  const [searchWord, setSearchWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingGenWord, setLoadingGenWord] = useState(false);\n  const [loadingSearch, setLoadingSearch] = useState(false);\n\n  // Manual Vocab Insert state\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n\n  // Manual Extraction state\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n\n  // AI Extraction state\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n\n  // UI message\n  const [message, setMessage] = useState('');\n\n  // Summarise Handlers\n  const genNotes = async () => {\n    setLoadingSum(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setRawNotes(note || '');\n    } catch {\n      setMessage('Error generating notes');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n\n  const doSumm = async () => {\n    if (!rawNotes.trim() && !file) {\n      setMessage('Paste notes or choose a file');\n      return;\n    }\n    setLoadingSum(true);\n    setMessage('');\n    try {\n      let data;\n      if (rawNotes.trim()) {\n        data = await fetch('http://127.0.0.1:5001/summarize-text', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ text: rawNotes }),\n        }).then(r => r.json());\n      } else {\n        const form = new FormData();\n        form.append('file', file);\n        data = await fetch('http://127.0.0.1:5001/summarize', { method: 'POST', body: form }).then(r => r.json());\n      }\n      setSummary(data.summary || '');\n    } catch {\n      setMessage('Error summarising');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n\n  const saveSum = async () => {\n    if (!summary) return;\n    await fetch('http://127.0.0.1:5001/save-summary', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, content: summary }),\n    });\n    setMessage('Summary saved');\n  };\n\n  // Paraphrase Handlers\n  const doPara = async () => {\n    if (!text.trim()) { setMessage('Enter text'); return; }\n    setLoadingPara(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/paraphrase-text', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text, tone }),\n      });\n      const { content } = await res.json();\n      setParaphrase(content || '');\n    } catch {\n      setMessage('Error paraphrasing');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n\n  const savePara = async () => {\n    if (!paraphrase) return;\n    await fetch('http://127.0.0.1:5001/save-paraphrase', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, content: paraphrase, tone }),\n    });\n    setMessage('Paraphrase saved');\n  };\n\n  // Vocab Search Handlers\n  const genWord = async () => {\n    setLoadingGenWord(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-word', { method: 'POST' });\n      const { word } = await res.json();\n      setSearchWord(word || '');\n    } catch {\n      setMessage('Error generating word');\n    } finally {\n      setLoadingGenWord(false);\n    }\n  };\n\n  const defineWord = async () => {\n    if (!searchWord.trim()) { setMessage('Enter a word'); return; }\n    setLoadingSearch(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/define-word', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ word: searchWord.trim() }),\n      });\n      const { content } = await res.json();\n      setVocabDef(content || '');\n    } catch {\n      setMessage('Error defining word');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n\n  const saveVocab = async () => {\n    if (!searchWord || !vocabDef) return;\n    await fetch('http://127.0.0.1:5001/save-vocab', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, word: searchWord, definition: vocabDef }),\n    });\n    setMessage('Vocab saved');\n  };\n\n  // Manual Vocab Insert\n  const saveManual = async () => {\n    if (!manualWord.trim() || !manualMeaning.trim()) { setMessage('Fill both fields'); return; }\n    await fetch('http://127.0.0.1:5001/save-vocab', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, word: manualWord, definition: manualMeaning }),\n    });\n    setMessage('Manual vocab saved');\n  };\n\n  // Manual Extraction\n  const extractManual = async () => {\n    if (!manualText.trim()) { setMessage('Paste a paragraph'); return; }\n    setLoadingExtractManual(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: manualText }),\n      });\n      const { words } = await res.json();\n      setExtractedManual(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n\n  const clearManual = () => { setManualText(''); setExtractedManual([]); setMessage(''); };\n\n  const saveExtractedManual = async () => {\n    for (const w of extractedManual) {\n      await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, word: w, definition: '' }),\n      });\n    }\n    setMessage('Extracted vocab saved');\n  };\n\n  // AI Extraction\n  const generateAiPara = async () => {\n    setLoadingGenAiPara(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setAiParagraph(note || '');\n    } catch {\n      setMessage('Error generating paragraph');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n\n  const extractAi = async () => {\n    if (!aiParagraph.trim()) { setMessage('Generate paragraph first'); return; }\n    setLoadingExtractAi(true);\n    setMessage('');\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: aiParagraph }),\n      });\n      const { words } = await res.json();\n      setExtractedAi(words || []);\n    } catch {\n      setMessage('Extraction failed');\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n\n  const clearAi = () => { setAiParagraph(''); setExtractedAi([]); setMessage(''); };\n\n  const saveExtractedAi = async () => {\n    for (const w of extractedAi) {\n      await fetch('http://127.0.0.1:5001/save-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, word: w, definition: '' }),\n      });\n    }\n    setMessage('AI extracted vocab saved');\n  };\n\n  return (\n    <div className=\"study-page\" style={bgStyle}>\n      <img\n        src={`${process.env.PUBLIC_URL}/photos/home.jpg`}\n        alt=\"Home\"\n        className=\"home-icon\"\n        onClick={() => navigate('/home2')}\n      />\n      <h1 className=\"main-header\">Let’s Study</h1>\n      {message && <div className=\"message\">{message}</div>}\n      {/* Summarise Note */}\n      <section className=\"panel\">\n        <h2>Summarise Note</h2>\n        <textarea\n          rows=\"4\"\n          placeholder=\"Paste notes…\"\n          value={rawNotes}\n          onChange={e => setRawNotes(e.target.value)}\n        />\n        <div className=\"controls\">\n          <button onClick={() => setRawNotes('')}>Clear Text</button>\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\".txt,.pdf\"\n            onChange={e => setFile(e.target.files[0])}\n          />\n          <button onClick={() => { setFile(null); fileInputRef.current.value = ''; }}>\n            Clear File\n          </button>\n          <button onClick={genNotes} disabled={loadingSum}>\n            {loadingSum ? 'Generating…' : 'Generate'}\n          </button>\n        </div>\n        <button onClick={doSumm} disabled={loadingSum}>\n          {loadingSum ? 'Summarising…' : 'Summarise'}\n        </button>\n        {summary && (\n          <div className=\"output\">\n            <div dangerouslySetInnerHTML={{ __html: summary }} />\n            <div className=\"actions\">\n              <button onClick={saveSum}>Save</button>\n              <button onClick={() => { navigator.clipboard.writeText(summary); setMessage('Copied'); }}>\n                Copy\n              </button>\n              <button onClick={() => setSummary('')}>Clear</button>\n            </div>\n          </div>\n        )}\n      </section>\n\n      {/* Paraphrase Note */}\n      <section className=\"panel\">\n        <h2>Paraphrase Note</h2>       \n        <div className=\"controls\">\n          <button onClick={genPara} disabled={loadingGenPara}>\n            {loadingGenPara ? 'Generating…' : 'Paraphrase'}\n          </button>\n          <button onClick={() => setText('')}>Clear Text</button>\n        </div>\n        <textarea\n          rows=\"4\"\n          placeholder=\"Enter text…\"\n          value={text}\n          onChange={e => setText(e.target.value)}\n        />\n        <div className=\"controls\">\n          <select value={tone} onChange={e => setTone(e.target.value)}>\n            <option value=\"casual\">Casual</option>\n            <option value=\"academic\">Academic</option>\n          </select>\n          <button onClick={doPara} disabled={loadingPara}>\n            {loadingPara ? 'Paraphrasing…' : 'Paraphrase'}\n          </button>\n        </div>\n        {paraphrase && (\n          <div className=\"output\">\n            <div dangerouslySetInnerHTML={{ __html: paraphrase }} />\n            <div className=\"actions\">\n              <button onClick={savePara}>Save</button>\n              <button onClick={() => { navigator.clipboard.writeText(paraphrase); setMessage('Copied'); }}>\n                Copy\n              </button>\n              <button onClick={() => setParaphrase('')}>Clear</button>\n            </div>\n          </div>\n        )}\n      </section>\n\n      {/* Vocab Search & Manual Insert */}\n      <div className=\"row\">\n        <section className=\"panel\">\n          <h2>Vocab Search</h2>\n          <div className=\"controls\">\n            <button onClick={genWord} disabled={loadingGenWord}>\n              {loadingGenWord ? 'Generating…' : 'Generate'}\n            </button>\n            <button onClick={() => { setSearchWord(''); setVocabDef(''); }}>\n              Clear\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter word…\"\n            value={searchWord}\n            onChange={e => setSearchWord(e.target.value)}\n          />\n          <button onClick={defineWord} disabled={loadingSearch}>\n            {loadingSearch ? 'Searching…' : 'Search'}\n          </button>\n          {vocabDef && <div className=\"output\">{vocabDef}</div>}\n          {vocabDef && <button onClick={saveVocab}>Save</button>}\n        </section>\n        <section className=\"panel\">\n          <h2>Manual Vocab</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Word…\"\n            value={manualWord}\n            onChange={e => setManualWord(e.target.value)}\n          />\n          <textarea\n            rows=\"3\"\n            placeholder=\"Meaning…\"\n            value={manualMeaning}\n            onChange={e => setManualMeaning(e.target.value)}\n          />\n          <div className=\"controls\">\n            <button onClick={saveManual}>Save</button>\n            <button onClick={() => { setManualWord(''); setManualMeaning(''); }}>\n              Clear\n            </button>\n          </div>\n        </section>\n      </div>\n\n      {/* Extraction Panels */}\n      <div className=\"row\">\n        <section className=\"panel\">\n          <h2>Extract Vocab (Manual)</h2>\n          <textarea\n            rows=\"4\"\n            placeholder=\"Paste a paragraph…\"\n            value={manualText}\n            onChange={e => setManualText(e.target.value)}\n          />\n          <div className=\"controls\">\n            <button onClick={extractManual} disabled={loadingExtractManual}>\n              {loadingExtractManual ? 'Extracting…' : 'Extract'}\n            </button>\n            <button onClick={clearManual}>Clear</button>\n          </div>\n          {extractedManual.length > 0 && (\n            <>\n              <ul className=\"list\">{extractedManual.map(w => <li key={w}>{w}</li>)}</ul>\n              <button onClick={saveExtractedManual}>Save All</button>\n            </>\n          )}\n        </section>\n        <section className=\"panel\">\n          <h2>Extract Vocab (AI)</h2>\n          <div className=\"controls\">\n            <button onClick={generateAiPara} disabled={loadingGenAiPara}>\n              {loadingGenAiPara ? 'Generating…' : 'Generate Paragraph'}\n            </button>\n            <button onClick={clearAi}>Clear</button>\n          </div>\n          {aiParagraph && <div className=\"output\">{aiParagraph}</div>}\n          {aiParagraph && (\n            <button onClick={extractAi} disabled={loadingExtractAi}>\n              {loadingExtractAi ? 'Extracting…' : 'Extract'}\n            </button>\n          )}\n          {extractedAi.length > 0 && (\n            <>\n              <ul className=\"list\">{extractedAi.map(w => <li key={w}>{w}</li>)}</ul>\n              <button onClick={saveExtractedAi}>Save All</button>\n            </>\n          )}\n        </section>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}