{"ast":null,"code":"var _jsxFileName = \"/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js\",\n  _s = $RefreshSig$();\n// src/pages/StudyPage.js\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudyPage() {\n  _s();\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const fileInputRef = useRef(null);\n  const bgStyle = {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages4.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat'\n  };\n  const [rawNotes, setRawNotes] = useState('');\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [loadingSum, setLoadingSum] = useState(false);\n  const [text, setText] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [paraphrase, setParaphrase] = useState('');\n  const [loadingPara, setLoadingPara] = useState(false);\n  const [searchWord, setSearchWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingSearch, setLoadingSearch] = useState(false);\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [message, setMessage] = useState('');\n  const showPopup = (msg = '✅ Saved Successfully!') => {\n    setMessage(msg);\n    setShowModal(true);\n    setTimeout(() => setShowModal(false), 1500);\n  };\n  const saveToServer = async (url, body) => {\n    try {\n      await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      showPopup();\n    } catch {\n      showPopup('❌ Error saving');\n    }\n  };\n  const doSumm = async () => {\n    if (!rawNotes.trim() && !file) return showPopup('❌ Paste text or upload file');\n    setLoadingSum(true);\n    try {\n      let data;\n      if (rawNotes.trim()) {\n        data = await (await fetch('http://127.0.0.1:5001/summarize-text', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: rawNotes\n          })\n        })).json();\n      } else {\n        const form = new FormData();\n        form.append('file', file);\n        data = await (await fetch('http://127.0.0.1:5001/summarize', {\n          method: 'POST',\n          body: form\n        })).json();\n      }\n      setSummary(data.summary || '');\n    } catch {\n      showPopup('❌ Error summarising');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n  const saveSum = () => {\n    if (!summary) return showPopup('❌ Nothing to save');\n    saveToServer('http://127.0.0.1:5001/save-summary', {\n      username,\n      content: summary\n    });\n  };\n  const genExample = async () => {\n    setLoadingPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setText(note || '');\n    } catch {\n      showPopup('❌ Error generating');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const doPara = async () => {\n    if (!text.trim()) return showPopup('❌ Enter or generate text');\n    setLoadingPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/paraphrase-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text,\n          tone\n        })\n      });\n      const {\n        content\n      } = await res.json();\n      setParaphrase(content || '');\n    } catch {\n      showPopup('❌ Error paraphrasing');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n  const savePara = () => {\n    if (!paraphrase) return showPopup('❌ Nothing to save');\n    saveToServer('http://127.0.0.1:5001/save-paraphrase', {\n      username,\n      content: paraphrase,\n      tone\n    });\n  };\n  const searchDefinition = async () => {\n    if (!searchWord.trim()) return showPopup('❌ Enter a word');\n    setLoadingSearch(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/define-word', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          word: searchWord\n        })\n      });\n      const {\n        content\n      } = await res.json();\n      setVocabDef(content);\n    } catch {\n      showPopup('❌ Error defining');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n  const saveSearchedVocab = () => {\n    if (!searchWord || !vocabDef) return showPopup('❌ Nothing to save');\n    saveToServer('http://127.0.0.1:5001/save-vocab', {\n      username,\n      word: searchWord,\n      definition: vocabDef\n    });\n  };\n  const saveManualVocab = () => {\n    if (!manualWord || !manualMeaning) return showPopup('❌ Fill both fields');\n    saveToServer('http://127.0.0.1:5001/save-vocab', {\n      username,\n      word: manualWord,\n      definition: manualMeaning\n    });\n  };\n  const extractManual = async () => {\n    if (!manualText.trim()) return showPopup('❌ Enter text');\n    setLoadingExtractManual(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: manualText\n        })\n      });\n      const {\n        words\n      } = await res.json();\n      setExtractedManual(words || []);\n    } catch {\n      showPopup('❌ Extract failed');\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n  const generateAIPara = async () => {\n    setLoadingGenAiPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', {\n        method: 'POST'\n      });\n      const {\n        note\n      } = await res.json();\n      setAiParagraph(note);\n    } catch {\n      showPopup('❌ AI paragraph failed');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n  const extractFromAI = async () => {\n    if (!aiParagraph.trim()) return showPopup('❌ No AI paragraph yet');\n    setLoadingExtractAi(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: aiParagraph\n        })\n      });\n      const {\n        words\n      } = await res.json();\n      setExtractedAi(words || []);\n    } catch {\n      showPopup('❌ Extract failed');\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"study-page\",\n    style: bgStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/photos/home.jpg`,\n      alt: \"Home\",\n      className: \"streak-home\",\n      onClick: () => navigate('/home2')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-header\",\n      children: \"Let's Study\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Summarise Note \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: saveSum,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          value: rawNotes,\n          onChange: e => setRawNotes(e.target.value),\n          placeholder: \"Paste notes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          accept: \".txt,.pdf\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: genNotes,\n          disabled: loadingSum,\n          children: loadingSum ? 'Generating...' : 'Generate'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: doSumm,\n          disabled: loadingSum,\n          children: loadingSum ? 'Summarising...' : 'Summarise'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Paraphrase Note \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: savePara,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Type here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: tone,\n          onChange: e => setTone(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"casual\",\n            children: \"Casual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"academic\",\n            children: \"Academic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: genExample,\n          disabled: loadingPara,\n          children: loadingPara ? 'Generating...' : 'Generate Example'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: doPara,\n          disabled: loadingPara,\n          children: loadingPara ? 'Paraphrasing...' : 'Paraphrase'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), paraphrase && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: paraphrase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Vocab Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchWord,\n          onChange: e => setSearchWord(e.target.value),\n          placeholder: \"Type a word...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            setLoadingSearch(true);\n            try {\n              const res = await fetch('http://127.0.0.1:5001/define-word', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  word: searchWord\n                })\n              });\n              const {\n                content\n              } = await res.json();\n              setVocabDef(content);\n              showSavePopup();\n            } catch {\n              setMessage('Error defining');\n            } finally {\n              setLoadingSearch(false);\n            }\n          },\n          children: loadingSearch ? 'Searching...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), vocabDef && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: vocabDef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Manual Vocab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: manualWord,\n          onChange: e => setManualWord(e.target.value),\n          placeholder: \"Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"2\",\n          value: manualMeaning,\n          onChange: e => setManualMeaning(e.target.value),\n          placeholder: \"Meaning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => saveToServer('http://127.0.0.1:5001/save-vocab', {\n            username,\n            word: manualWord,\n            definition: manualMeaning\n          }),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extract-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extract from Manual Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"4\",\n          value: manualText,\n          onChange: e => setManualText(e.target.value),\n          placeholder: \"Enter text...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            setLoadingExtractManual(true);\n            try {\n              const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  text: manualText\n                })\n              });\n              const {\n                words\n              } = await res.json();\n              setExtractedManual(words);\n            } catch {\n              setMessage('Error extracting');\n            } finally {\n              setLoadingExtractManual(false);\n            }\n          },\n          children: loadingExtractManual ? 'Extracting...' : 'Extract'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), extractedManual.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"extracted-list\",\n          children: extractedManual.map((w, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: w\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 46\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Extract from AI Paragraph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            setLoadingGenAiPara(true);\n            try {\n              const res = await fetch('http://127.0.0.1:5001/generate-note', {\n                method: 'POST'\n              });\n              const {\n                note\n              } = await res.json();\n              setAiParagraph(note || '');\n            } catch {\n              setMessage('Error generating');\n            } finally {\n              setLoadingGenAiPara(false);\n            }\n          },\n          children: loadingGenAiPara ? 'Generating...' : 'Generate AI Paragraph'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), aiParagraph && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generated-output\",\n          children: aiParagraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            setLoadingExtractAi(true);\n            try {\n              const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  text: aiParagraph\n                })\n              });\n              const {\n                words\n              } = await res.json();\n              setExtractedAi(words);\n            } catch {\n              setMessage('Error extracting');\n            } finally {\n              setLoadingExtractAi(false);\n            }\n          },\n          children: loadingExtractAi ? 'Extracting...' : 'Extract Vocab'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), extractedAi.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"extracted-list\",\n          children: extractedAi.map((w, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: w\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal show\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: \"\\u2705 Saved Successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(StudyPage, \"Lv+k8tdbbTiCuKMfURMHIk2ve0I=\", false, function () {\n  return [useNavigate];\n});\n_c = StudyPage;\nvar _c;\n$RefreshReg$(_c, \"StudyPage\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","jsxDEV","_jsxDEV","StudyPage","_s","navigate","username","localStorage","getItem","fileInputRef","bgStyle","backgroundImage","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","backgroundRepeat","rawNotes","setRawNotes","file","setFile","summary","setSummary","loadingSum","setLoadingSum","text","setText","tone","setTone","paraphrase","setParaphrase","loadingPara","setLoadingPara","searchWord","setSearchWord","vocabDef","setVocabDef","loadingSearch","setLoadingSearch","manualWord","setManualWord","manualMeaning","setManualMeaning","manualText","setManualText","extractedManual","setExtractedManual","loadingExtractManual","setLoadingExtractManual","aiParagraph","setAiParagraph","extractedAi","setExtractedAi","loadingGenAiPara","setLoadingGenAiPara","loadingExtractAi","setLoadingExtractAi","showModal","setShowModal","message","setMessage","showPopup","msg","setTimeout","saveToServer","url","body","fetch","method","headers","JSON","stringify","doSumm","trim","data","json","form","FormData","append","saveSum","content","genExample","res","note","doPara","savePara","searchDefinition","word","saveSearchedVocab","definition","saveManualVocab","extractManual","words","generateAIPara","extractFromAI","className","style","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","onChange","e","target","placeholder","type","ref","accept","files","genNotes","disabled","showSavePopup","length","map","w","i","_c","$RefreshReg$"],"sources":["/Users/nangeaindrahein/study-classmate/client/src/pages/StudyPage.js"],"sourcesContent":["// src/pages/StudyPage.js\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StudyPage.css';\n\nexport default function StudyPage() {\n  const navigate = useNavigate();\n  const username = localStorage.getItem('username');\n  const fileInputRef = useRef(null);\n\n  const bgStyle = {\n    backgroundImage: `url(${process.env.PUBLIC_URL}/photos/pages4.jpg)`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n  };\n\n  const [rawNotes, setRawNotes] = useState('');\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [loadingSum, setLoadingSum] = useState(false);\n\n  const [text, setText] = useState('');\n  const [tone, setTone] = useState('casual');\n  const [paraphrase, setParaphrase] = useState('');\n  const [loadingPara, setLoadingPara] = useState(false);\n\n  const [searchWord, setSearchWord] = useState('');\n  const [vocabDef, setVocabDef] = useState('');\n  const [loadingSearch, setLoadingSearch] = useState(false);\n\n  const [manualWord, setManualWord] = useState('');\n  const [manualMeaning, setManualMeaning] = useState('');\n\n  const [manualText, setManualText] = useState('');\n  const [extractedManual, setExtractedManual] = useState([]);\n  const [loadingExtractManual, setLoadingExtractManual] = useState(false);\n\n  const [aiParagraph, setAiParagraph] = useState('');\n  const [extractedAi, setExtractedAi] = useState([]);\n  const [loadingGenAiPara, setLoadingGenAiPara] = useState(false);\n  const [loadingExtractAi, setLoadingExtractAi] = useState(false);\n\n  const [showModal, setShowModal] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const showPopup = (msg = '✅ Saved Successfully!') => {\n    setMessage(msg);\n    setShowModal(true);\n    setTimeout(() => setShowModal(false), 1500);\n  };\n\n  const saveToServer = async (url, body) => {\n    try {\n      await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body),\n      });\n      showPopup();\n    } catch {\n      showPopup('❌ Error saving');\n    }\n  };\n\n  const doSumm = async () => {\n    if (!rawNotes.trim() && !file) return showPopup('❌ Paste text or upload file');\n    setLoadingSum(true);\n    try {\n      let data;\n      if (rawNotes.trim()) {\n        data = await (await fetch('http://127.0.0.1:5001/summarize-text', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ text: rawNotes })\n        })).json();\n      } else {\n        const form = new FormData();\n        form.append('file', file);\n        data = await (await fetch('http://127.0.0.1:5001/summarize', {\n          method: 'POST',\n          body: form\n        })).json();\n      }\n      setSummary(data.summary || '');\n    } catch {\n      showPopup('❌ Error summarising');\n    } finally {\n      setLoadingSum(false);\n    }\n  };\n\n  const saveSum = () => {\n    if (!summary) return showPopup('❌ Nothing to save');\n    saveToServer('http://127.0.0.1:5001/save-summary', { username, content: summary });\n  };\n\n  const genExample = async () => {\n    setLoadingPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setText(note || '');\n    } catch {\n      showPopup('❌ Error generating');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n\n  const doPara = async () => {\n    if (!text.trim()) return showPopup('❌ Enter or generate text');\n    setLoadingPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/paraphrase-text', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text, tone })\n      });\n      const { content } = await res.json();\n      setParaphrase(content || '');\n    } catch {\n      showPopup('❌ Error paraphrasing');\n    } finally {\n      setLoadingPara(false);\n    }\n  };\n\n  const savePara = () => {\n    if (!paraphrase) return showPopup('❌ Nothing to save');\n    saveToServer('http://127.0.0.1:5001/save-paraphrase', { username, content: paraphrase, tone });\n  };\n\n  const searchDefinition = async () => {\n    if (!searchWord.trim()) return showPopup('❌ Enter a word');\n    setLoadingSearch(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/define-word', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ word: searchWord })\n      });\n      const { content } = await res.json();\n      setVocabDef(content);\n    } catch {\n      showPopup('❌ Error defining');\n    } finally {\n      setLoadingSearch(false);\n    }\n  };\n\n  const saveSearchedVocab = () => {\n    if (!searchWord || !vocabDef) return showPopup('❌ Nothing to save');\n    saveToServer('http://127.0.0.1:5001/save-vocab', {\n      username, word: searchWord, definition: vocabDef\n    });\n  };\n\n  const saveManualVocab = () => {\n    if (!manualWord || !manualMeaning) return showPopup('❌ Fill both fields');\n    saveToServer('http://127.0.0.1:5001/save-vocab', {\n      username, word: manualWord, definition: manualMeaning\n    });\n  };\n\n  const extractManual = async () => {\n    if (!manualText.trim()) return showPopup('❌ Enter text');\n    setLoadingExtractManual(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: manualText })\n      });\n      const { words } = await res.json();\n      setExtractedManual(words || []);\n    } catch {\n      showPopup('❌ Extract failed');\n    } finally {\n      setLoadingExtractManual(false);\n    }\n  };\n\n  const generateAIPara = async () => {\n    setLoadingGenAiPara(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/generate-note', { method: 'POST' });\n      const { note } = await res.json();\n      setAiParagraph(note);\n    } catch {\n      showPopup('❌ AI paragraph failed');\n    } finally {\n      setLoadingGenAiPara(false);\n    }\n  };\n\n  const extractFromAI = async () => {\n    if (!aiParagraph.trim()) return showPopup('❌ No AI paragraph yet');\n    setLoadingExtractAi(true);\n    try {\n      const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: aiParagraph })\n      });\n      const { words } = await res.json();\n      setExtractedAi(words || []);\n    } catch {\n      showPopup('❌ Extract failed');\n    } finally {\n      setLoadingExtractAi(false);\n    }\n  };\n\n  return (\n    <div className=\"study-page\" style={bgStyle}>\n      <img src={`${process.env.PUBLIC_URL}/photos/home.jpg`} alt=\"Home\" className=\"streak-home\" onClick={() => navigate('/home2')} />\n      <h1 className=\"main-header\">Let's Study</h1>\n      {message && <div className=\"message\">{message}</div>}\n\n      <div className=\"top-row\">\n        <section className=\"section\">\n          <h2>Summarise Note <button className=\"btn\" onClick={saveSum}>Save</button></h2>\n          <textarea rows=\"4\" value={rawNotes} onChange={e => setRawNotes(e.target.value)} placeholder=\"Paste notes...\" />\n          <input type=\"file\" ref={fileInputRef} accept=\".txt,.pdf\" onChange={e => setFile(e.target.files[0])} />\n          <button onClick={genNotes} disabled={loadingSum}>{loadingSum ? 'Generating...' : 'Generate'}</button>\n          <button onClick={doSumm} disabled={loadingSum}>{loadingSum ? 'Summarising...' : 'Summarise'}</button>\n          {summary && <div className=\"generated-output\">{summary}</div>}\n        </section>\n\n        <section className=\"section\">\n          <h2>Paraphrase Note <button className=\"btn\" onClick={savePara}>Save</button></h2>\n          <textarea rows=\"4\" value={text} onChange={e => setText(e.target.value)} placeholder=\"Type here...\" />\n          <select value={tone} onChange={e => setTone(e.target.value)}>\n            <option value=\"casual\">Casual</option>\n            <option value=\"academic\">Academic</option>\n          </select>\n          <button onClick={genExample} disabled={loadingPara}>{loadingPara ? 'Generating...' : 'Generate Example'}</button>\n          <button onClick={doPara} disabled={loadingPara}>{loadingPara ? 'Paraphrasing...' : 'Paraphrase'}</button>\n          {paraphrase && <div className=\"generated-output\">{paraphrase}</div>}\n        </section>\n      </div>\n\n      <div className=\"middle-row\">\n        <section className=\"section\">\n          <h2>Vocab Search</h2>\n          <input type=\"text\" value={searchWord} onChange={e => setSearchWord(e.target.value)} placeholder=\"Type a word...\" />\n          <button onClick={async () => {\n            setLoadingSearch(true);\n            try {\n              const res = await fetch('http://127.0.0.1:5001/define-word', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ word: searchWord })\n              });\n              const { content } = await res.json();\n              setVocabDef(content);\n              showSavePopup();\n            } catch {\n              setMessage('Error defining');\n            } finally {\n              setLoadingSearch(false);\n            }\n          }}>{loadingSearch ? 'Searching...' : 'Search'}</button>\n          {vocabDef && <div className=\"generated-output\">{vocabDef}</div>}\n        </section>\n\n        <section className=\"section\">\n          <h2>Manual Vocab</h2>\n          <input type=\"text\" value={manualWord} onChange={e => setManualWord(e.target.value)} placeholder=\"Word\" />\n          <textarea rows=\"2\" value={manualMeaning} onChange={e => setManualMeaning(e.target.value)} placeholder=\"Meaning\" />\n          <button onClick={() => saveToServer('http://127.0.0.1:5001/save-vocab', { username, word: manualWord, definition: manualMeaning })}>Save</button>\n        </section>\n      </div>\n\n      <div className=\"extract-row\">\n        <section className=\"section\">\n          <h2>Extract from Manual Text</h2>\n          <textarea rows=\"4\" value={manualText} onChange={e => setManualText(e.target.value)} placeholder=\"Enter text...\" />\n          <button onClick={async () => {\n            setLoadingExtractManual(true);\n            try {\n              const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ text: manualText })\n              });\n              const { words } = await res.json();\n              setExtractedManual(words);\n            } catch {\n              setMessage('Error extracting');\n            } finally {\n              setLoadingExtractManual(false);\n            }\n          }}>{loadingExtractManual ? 'Extracting...' : 'Extract'}</button>\n          {extractedManual.length > 0 && (\n            <ul className=\"extracted-list\">\n              {extractedManual.map((w, i) => <li key={i}>{w}</li>)}\n            </ul>\n          )}\n        </section>\n\n        <section className=\"section\">\n          <h2>Extract from AI Paragraph</h2>\n          <button onClick={async () => {\n            setLoadingGenAiPara(true);\n            try {\n              const res = await fetch('http://127.0.0.1:5001/generate-note', { method: 'POST' });\n              const { note } = await res.json();\n              setAiParagraph(note || '');\n            } catch {\n              setMessage('Error generating');\n            } finally {\n              setLoadingGenAiPara(false);\n            }\n          }}>{loadingGenAiPara ? 'Generating...' : 'Generate AI Paragraph'}</button>\n          {aiParagraph && <div className=\"generated-output\">{aiParagraph}</div>}\n          <button onClick={async () => {\n            setLoadingExtractAi(true);\n            try {\n              const res = await fetch('http://127.0.0.1:5001/extract-vocab', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ text: aiParagraph })\n              });\n              const { words } = await res.json();\n              setExtractedAi(words);\n            } catch {\n              setMessage('Error extracting');\n            } finally {\n              setLoadingExtractAi(false);\n            }\n          }}>{loadingExtractAi ? 'Extracting...' : 'Extract Vocab'}</button>\n          {extractedAi.length > 0 && (\n            <ul className=\"extracted-list\">\n              {extractedAi.map((w, i) => <li key={i}>{w}</li>)}\n            </ul>\n          )}\n        </section>\n      </div>\n\n      {showModal && (\n        <div className=\"modal show\">\n          <div className=\"modal-content\">✅ Saved Successfully!</div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,MAAMC,YAAY,GAAGV,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMW,OAAO,GAAG;IACdC,eAAe,EAAE,OAAOC,OAAO,CAACC,GAAG,CAACC,UAAU,qBAAqB;IACnEC,cAAc,EAAE,OAAO;IACvBC,kBAAkB,EAAE,QAAQ;IAC5BC,gBAAgB,EAAE;EACpB,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAAC4B,IAAI,EAAEC,OAAO,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC8B,IAAI,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC,QAAQ,CAAC;EAC1C,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM,CAACoC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsC,QAAQ,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM,CAAC0C,UAAU,EAAEC,aAAa,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC4C,aAAa,EAAEC,gBAAgB,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM,CAAC8C,UAAU,EAAEC,aAAa,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgD,eAAe,EAAEC,kBAAkB,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;EAEvE,MAAM,CAACoD,WAAW,EAAEC,cAAc,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsD,WAAW,EAAEC,cAAc,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzD,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC0D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAM,CAAC4D,SAAS,EAAEC,YAAY,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC8D,OAAO,EAAEC,UAAU,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMgE,SAAS,GAAGA,CAACC,GAAG,GAAG,uBAAuB,KAAK;IACnDF,UAAU,CAACE,GAAG,CAAC;IACfJ,YAAY,CAAC,IAAI,CAAC;IAClBK,UAAU,CAAC,MAAML,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC7C,CAAC;EAED,MAAMM,YAAY,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,KAAK;IACxC,IAAI;MACF,MAAMC,KAAK,CAACF,GAAG,EAAE;QACfG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI;MAC3B,CAAC,CAAC;MACFL,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,MAAM;MACNA,SAAS,CAAC,gBAAgB,CAAC;IAC7B;EACF,CAAC;EAED,MAAMW,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI,CAACvD,QAAQ,CAACwD,IAAI,CAAC,CAAC,IAAI,CAACtD,IAAI,EAAE,OAAO0C,SAAS,CAAC,6BAA6B,CAAC;IAC9ErC,aAAa,CAAC,IAAI,CAAC;IACnB,IAAI;MACF,IAAIkD,IAAI;MACR,IAAIzD,QAAQ,CAACwD,IAAI,CAAC,CAAC,EAAE;QACnBC,IAAI,GAAG,MAAM,CAAC,MAAMP,KAAK,CAAC,sCAAsC,EAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAAC;YAAE9C,IAAI,EAAER;UAAS,CAAC;QACzC,CAAC,CAAC,EAAE0D,IAAI,CAAC,CAAC;MACZ,CAAC,MAAM;QACL,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAE3D,IAAI,CAAC;QACzBuD,IAAI,GAAG,MAAM,CAAC,MAAMP,KAAK,CAAC,iCAAiC,EAAE;UAC3DC,MAAM,EAAE,MAAM;UACdF,IAAI,EAAEU;QACR,CAAC,CAAC,EAAED,IAAI,CAAC,CAAC;MACZ;MACArD,UAAU,CAACoD,IAAI,CAACrD,OAAO,IAAI,EAAE,CAAC;IAChC,CAAC,CAAC,MAAM;MACNwC,SAAS,CAAC,qBAAqB,CAAC;IAClC,CAAC,SAAS;MACRrC,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMuD,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI,CAAC1D,OAAO,EAAE,OAAOwC,SAAS,CAAC,mBAAmB,CAAC;IACnDG,YAAY,CAAC,oCAAoC,EAAE;MAAE3D,QAAQ;MAAE2E,OAAO,EAAE3D;IAAQ,CAAC,CAAC;EACpF,CAAC;EAED,MAAM4D,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BjD,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACF,MAAMkD,GAAG,GAAG,MAAMf,KAAK,CAAC,qCAAqC,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAC,CAAC;MAClF,MAAM;QAAEe;MAAK,CAAC,GAAG,MAAMD,GAAG,CAACP,IAAI,CAAC,CAAC;MACjCjD,OAAO,CAACyD,IAAI,IAAI,EAAE,CAAC;IACrB,CAAC,CAAC,MAAM;MACNtB,SAAS,CAAC,oBAAoB,CAAC;IACjC,CAAC,SAAS;MACR7B,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMoD,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI,CAAC3D,IAAI,CAACgD,IAAI,CAAC,CAAC,EAAE,OAAOZ,SAAS,CAAC,0BAA0B,CAAC;IAC9D7B,cAAc,CAAC,IAAI,CAAC;IACpB,IAAI;MACF,MAAMkD,GAAG,GAAG,MAAMf,KAAK,CAAC,uCAAuC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAAC;UAAE9C,IAAI;UAAEE;QAAK,CAAC;MACrC,CAAC,CAAC;MACF,MAAM;QAAEqD;MAAQ,CAAC,GAAG,MAAME,GAAG,CAACP,IAAI,CAAC,CAAC;MACpC7C,aAAa,CAACkD,OAAO,IAAI,EAAE,CAAC;IAC9B,CAAC,CAAC,MAAM;MACNnB,SAAS,CAAC,sBAAsB,CAAC;IACnC,CAAC,SAAS;MACR7B,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMqD,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACxD,UAAU,EAAE,OAAOgC,SAAS,CAAC,mBAAmB,CAAC;IACtDG,YAAY,CAAC,uCAAuC,EAAE;MAAE3D,QAAQ;MAAE2E,OAAO,EAAEnD,UAAU;MAAEF;IAAK,CAAC,CAAC;EAChG,CAAC;EAED,MAAM2D,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACrD,UAAU,CAACwC,IAAI,CAAC,CAAC,EAAE,OAAOZ,SAAS,CAAC,gBAAgB,CAAC;IAC1DvB,gBAAgB,CAAC,IAAI,CAAC;IACtB,IAAI;MACF,MAAM4C,GAAG,GAAG,MAAMf,KAAK,CAAC,mCAAmC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAAC;UAAEgB,IAAI,EAAEtD;QAAW,CAAC;MAC3C,CAAC,CAAC;MACF,MAAM;QAAE+C;MAAQ,CAAC,GAAG,MAAME,GAAG,CAACP,IAAI,CAAC,CAAC;MACpCvC,WAAW,CAAC4C,OAAO,CAAC;IACtB,CAAC,CAAC,MAAM;MACNnB,SAAS,CAAC,kBAAkB,CAAC;IAC/B,CAAC,SAAS;MACRvB,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAED,MAAMkD,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACvD,UAAU,IAAI,CAACE,QAAQ,EAAE,OAAO0B,SAAS,CAAC,mBAAmB,CAAC;IACnEG,YAAY,CAAC,kCAAkC,EAAE;MAC/C3D,QAAQ;MAAEkF,IAAI,EAAEtD,UAAU;MAAEwD,UAAU,EAAEtD;IAC1C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMuD,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACnD,UAAU,IAAI,CAACE,aAAa,EAAE,OAAOoB,SAAS,CAAC,oBAAoB,CAAC;IACzEG,YAAY,CAAC,kCAAkC,EAAE;MAC/C3D,QAAQ;MAAEkF,IAAI,EAAEhD,UAAU;MAAEkD,UAAU,EAAEhD;IAC1C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMkD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAChD,UAAU,CAAC8B,IAAI,CAAC,CAAC,EAAE,OAAOZ,SAAS,CAAC,cAAc,CAAC;IACxDb,uBAAuB,CAAC,IAAI,CAAC;IAC7B,IAAI;MACF,MAAMkC,GAAG,GAAG,MAAMf,KAAK,CAAC,qCAAqC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAAC;UAAE9C,IAAI,EAAEkB;QAAW,CAAC;MAC3C,CAAC,CAAC;MACF,MAAM;QAAEiD;MAAM,CAAC,GAAG,MAAMV,GAAG,CAACP,IAAI,CAAC,CAAC;MAClC7B,kBAAkB,CAAC8C,KAAK,IAAI,EAAE,CAAC;IACjC,CAAC,CAAC,MAAM;MACN/B,SAAS,CAAC,kBAAkB,CAAC;IAC/B,CAAC,SAAS;MACRb,uBAAuB,CAAC,KAAK,CAAC;IAChC;EACF,CAAC;EAED,MAAM6C,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCvC,mBAAmB,CAAC,IAAI,CAAC;IACzB,IAAI;MACF,MAAM4B,GAAG,GAAG,MAAMf,KAAK,CAAC,qCAAqC,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAC,CAAC;MAClF,MAAM;QAAEe;MAAK,CAAC,GAAG,MAAMD,GAAG,CAACP,IAAI,CAAC,CAAC;MACjCzB,cAAc,CAACiC,IAAI,CAAC;IACtB,CAAC,CAAC,MAAM;MACNtB,SAAS,CAAC,uBAAuB,CAAC;IACpC,CAAC,SAAS;MACRP,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;EAED,MAAMwC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAC7C,WAAW,CAACwB,IAAI,CAAC,CAAC,EAAE,OAAOZ,SAAS,CAAC,uBAAuB,CAAC;IAClEL,mBAAmB,CAAC,IAAI,CAAC;IACzB,IAAI;MACF,MAAM0B,GAAG,GAAG,MAAMf,KAAK,CAAC,qCAAqC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAAC;UAAE9C,IAAI,EAAEwB;QAAY,CAAC;MAC5C,CAAC,CAAC;MACF,MAAM;QAAE2C;MAAM,CAAC,GAAG,MAAMV,GAAG,CAACP,IAAI,CAAC,CAAC;MAClCvB,cAAc,CAACwC,KAAK,IAAI,EAAE,CAAC;IAC7B,CAAC,CAAC,MAAM;MACN/B,SAAS,CAAC,kBAAkB,CAAC;IAC/B,CAAC,SAAS;MACRL,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;EAED,oBACEvD,OAAA;IAAK8F,SAAS,EAAC,YAAY;IAACC,KAAK,EAAEvF,OAAQ;IAAAwF,QAAA,gBACzChG,OAAA;MAAKiG,GAAG,EAAE,GAAGvF,OAAO,CAACC,GAAG,CAACC,UAAU,kBAAmB;MAACsF,GAAG,EAAC,MAAM;MAACJ,SAAS,EAAC,aAAa;MAACK,OAAO,EAAEA,CAAA,KAAMhG,QAAQ,CAAC,QAAQ;IAAE;MAAAiG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/HvG,OAAA;MAAI8F,SAAS,EAAC,aAAa;MAAAE,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3C7C,OAAO,iBAAI1D,OAAA;MAAK8F,SAAS,EAAC,SAAS;MAAAE,QAAA,EAAEtC;IAAO;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEpDvG,OAAA;MAAK8F,SAAS,EAAC,SAAS;MAAAE,QAAA,gBACtBhG,OAAA;QAAS8F,SAAS,EAAC,SAAS;QAAAE,QAAA,gBAC1BhG,OAAA;UAAAgG,QAAA,GAAI,iBAAe,eAAAhG,OAAA;YAAQ8F,SAAS,EAAC,KAAK;YAACK,OAAO,EAAErB,OAAQ;YAAAkB,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/EvG,OAAA;UAAUwG,IAAI,EAAC,GAAG;UAACC,KAAK,EAAEzF,QAAS;UAAC0F,QAAQ,EAAEC,CAAC,IAAI1F,WAAW,CAAC0F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,WAAW,EAAC;QAAgB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/GvG,OAAA;UAAO8G,IAAI,EAAC,MAAM;UAACC,GAAG,EAAExG,YAAa;UAACyG,MAAM,EAAC,WAAW;UAACN,QAAQ,EAAEC,CAAC,IAAIxF,OAAO,CAACwF,CAAC,CAACC,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtGvG,OAAA;UAAQmG,OAAO,EAAEe,QAAS;UAACC,QAAQ,EAAE7F,UAAW;UAAA0E,QAAA,EAAE1E,UAAU,GAAG,eAAe,GAAG;QAAU;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACrGvG,OAAA;UAAQmG,OAAO,EAAE5B,MAAO;UAAC4C,QAAQ,EAAE7F,UAAW;UAAA0E,QAAA,EAAE1E,UAAU,GAAG,gBAAgB,GAAG;QAAW;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EACpGnF,OAAO,iBAAIpB,OAAA;UAAK8F,SAAS,EAAC,kBAAkB;UAAAE,QAAA,EAAE5E;QAAO;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eAEVvG,OAAA;QAAS8F,SAAS,EAAC,SAAS;QAAAE,QAAA,gBAC1BhG,OAAA;UAAAgG,QAAA,GAAI,kBAAgB,eAAAhG,OAAA;YAAQ8F,SAAS,EAAC,KAAK;YAACK,OAAO,EAAEf,QAAS;YAAAY,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjFvG,OAAA;UAAUwG,IAAI,EAAC,GAAG;UAACC,KAAK,EAAEjF,IAAK;UAACkF,QAAQ,EAAEC,CAAC,IAAIlF,OAAO,CAACkF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,WAAW,EAAC;QAAc;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrGvG,OAAA;UAAQyG,KAAK,EAAE/E,IAAK;UAACgF,QAAQ,EAAEC,CAAC,IAAIhF,OAAO,CAACgF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAT,QAAA,gBAC1DhG,OAAA;YAAQyG,KAAK,EAAC,QAAQ;YAAAT,QAAA,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCvG,OAAA;YAAQyG,KAAK,EAAC,UAAU;YAAAT,QAAA,EAAC;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACTvG,OAAA;UAAQmG,OAAO,EAAEnB,UAAW;UAACmC,QAAQ,EAAErF,WAAY;UAAAkE,QAAA,EAAElE,WAAW,GAAG,eAAe,GAAG;QAAkB;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACjHvG,OAAA;UAAQmG,OAAO,EAAEhB,MAAO;UAACgC,QAAQ,EAAErF,WAAY;UAAAkE,QAAA,EAAElE,WAAW,GAAG,iBAAiB,GAAG;QAAY;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EACxG3E,UAAU,iBAAI5B,OAAA;UAAK8F,SAAS,EAAC,kBAAkB;UAAAE,QAAA,EAAEpE;QAAU;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAENvG,OAAA;MAAK8F,SAAS,EAAC,YAAY;MAAAE,QAAA,gBACzBhG,OAAA;QAAS8F,SAAS,EAAC,SAAS;QAAAE,QAAA,gBAC1BhG,OAAA;UAAAgG,QAAA,EAAI;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBvG,OAAA;UAAO8G,IAAI,EAAC,MAAM;UAACL,KAAK,EAAEzE,UAAW;UAAC0E,QAAQ,EAAEC,CAAC,IAAI1E,aAAa,CAAC0E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,WAAW,EAAC;QAAgB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnHvG,OAAA;UAAQmG,OAAO,EAAE,MAAAA,CAAA,KAAY;YAC3B9D,gBAAgB,CAAC,IAAI,CAAC;YACtB,IAAI;cACF,MAAM4C,GAAG,GAAG,MAAMf,KAAK,CAAC,mCAAmC,EAAE;gBAC3DC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBAAE,cAAc,EAAE;gBAAmB,CAAC;gBAC/CH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAAC;kBAAEgB,IAAI,EAAEtD;gBAAW,CAAC;cAC3C,CAAC,CAAC;cACF,MAAM;gBAAE+C;cAAQ,CAAC,GAAG,MAAME,GAAG,CAACP,IAAI,CAAC,CAAC;cACpCvC,WAAW,CAAC4C,OAAO,CAAC;cACpBqC,aAAa,CAAC,CAAC;YACjB,CAAC,CAAC,MAAM;cACNzD,UAAU,CAAC,gBAAgB,CAAC;YAC9B,CAAC,SAAS;cACRtB,gBAAgB,CAAC,KAAK,CAAC;YACzB;UACF,CAAE;UAAA2D,QAAA,EAAE5D,aAAa,GAAG,cAAc,GAAG;QAAQ;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EACtDrE,QAAQ,iBAAIlC,OAAA;UAAK8F,SAAS,EAAC,kBAAkB;UAAAE,QAAA,EAAE9D;QAAQ;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eAEVvG,OAAA;QAAS8F,SAAS,EAAC,SAAS;QAAAE,QAAA,gBAC1BhG,OAAA;UAAAgG,QAAA,EAAI;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBvG,OAAA;UAAO8G,IAAI,EAAC,MAAM;UAACL,KAAK,EAAEnE,UAAW;UAACoE,QAAQ,EAAEC,CAAC,IAAIpE,aAAa,CAACoE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,WAAW,EAAC;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzGvG,OAAA;UAAUwG,IAAI,EAAC,GAAG;UAACC,KAAK,EAAEjE,aAAc;UAACkE,QAAQ,EAAEC,CAAC,IAAIlE,gBAAgB,CAACkE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,WAAW,EAAC;QAAS;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClHvG,OAAA;UAAQmG,OAAO,EAAEA,CAAA,KAAMpC,YAAY,CAAC,kCAAkC,EAAE;YAAE3D,QAAQ;YAAEkF,IAAI,EAAEhD,UAAU;YAAEkD,UAAU,EAAEhD;UAAc,CAAC,CAAE;UAAAwD,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1I,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAENvG,OAAA;MAAK8F,SAAS,EAAC,aAAa;MAAAE,QAAA,gBAC1BhG,OAAA;QAAS8F,SAAS,EAAC,SAAS;QAAAE,QAAA,gBAC1BhG,OAAA;UAAAgG,QAAA,EAAI;QAAwB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCvG,OAAA;UAAUwG,IAAI,EAAC,GAAG;UAACC,KAAK,EAAE/D,UAAW;UAACgE,QAAQ,EAAEC,CAAC,IAAIhE,aAAa,CAACgE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,WAAW,EAAC;QAAe;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClHvG,OAAA;UAAQmG,OAAO,EAAE,MAAAA,CAAA,KAAY;YAC3BpD,uBAAuB,CAAC,IAAI,CAAC;YAC7B,IAAI;cACF,MAAMkC,GAAG,GAAG,MAAMf,KAAK,CAAC,qCAAqC,EAAE;gBAC7DC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBAAE,cAAc,EAAE;gBAAmB,CAAC;gBAC/CH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAAC;kBAAE9C,IAAI,EAAEkB;gBAAW,CAAC;cAC3C,CAAC,CAAC;cACF,MAAM;gBAAEiD;cAAM,CAAC,GAAG,MAAMV,GAAG,CAACP,IAAI,CAAC,CAAC;cAClC7B,kBAAkB,CAAC8C,KAAK,CAAC;YAC3B,CAAC,CAAC,MAAM;cACNhC,UAAU,CAAC,kBAAkB,CAAC;YAChC,CAAC,SAAS;cACRZ,uBAAuB,CAAC,KAAK,CAAC;YAChC;UACF,CAAE;UAAAiD,QAAA,EAAElD,oBAAoB,GAAG,eAAe,GAAG;QAAS;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EAC/D3D,eAAe,CAACyE,MAAM,GAAG,CAAC,iBACzBrH,OAAA;UAAI8F,SAAS,EAAC,gBAAgB;UAAAE,QAAA,EAC3BpD,eAAe,CAAC0E,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAAKxH,OAAA;YAAAgG,QAAA,EAAauB;UAAC,GAALC,CAAC;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eAEVvG,OAAA;QAAS8F,SAAS,EAAC,SAAS;QAAAE,QAAA,gBAC1BhG,OAAA;UAAAgG,QAAA,EAAI;QAAyB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClCvG,OAAA;UAAQmG,OAAO,EAAE,MAAAA,CAAA,KAAY;YAC3B9C,mBAAmB,CAAC,IAAI,CAAC;YACzB,IAAI;cACF,MAAM4B,GAAG,GAAG,MAAMf,KAAK,CAAC,qCAAqC,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAC,CAAC;cAClF,MAAM;gBAAEe;cAAK,CAAC,GAAG,MAAMD,GAAG,CAACP,IAAI,CAAC,CAAC;cACjCzB,cAAc,CAACiC,IAAI,IAAI,EAAE,CAAC;YAC5B,CAAC,CAAC,MAAM;cACNvB,UAAU,CAAC,kBAAkB,CAAC;YAChC,CAAC,SAAS;cACRN,mBAAmB,CAAC,KAAK,CAAC;YAC5B;UACF,CAAE;UAAA2C,QAAA,EAAE5C,gBAAgB,GAAG,eAAe,GAAG;QAAuB;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EACzEvD,WAAW,iBAAIhD,OAAA;UAAK8F,SAAS,EAAC,kBAAkB;UAAAE,QAAA,EAAEhD;QAAW;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrEvG,OAAA;UAAQmG,OAAO,EAAE,MAAAA,CAAA,KAAY;YAC3B5C,mBAAmB,CAAC,IAAI,CAAC;YACzB,IAAI;cACF,MAAM0B,GAAG,GAAG,MAAMf,KAAK,CAAC,qCAAqC,EAAE;gBAC7DC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBAAE,cAAc,EAAE;gBAAmB,CAAC;gBAC/CH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAAC;kBAAE9C,IAAI,EAAEwB;gBAAY,CAAC;cAC5C,CAAC,CAAC;cACF,MAAM;gBAAE2C;cAAM,CAAC,GAAG,MAAMV,GAAG,CAACP,IAAI,CAAC,CAAC;cAClCvB,cAAc,CAACwC,KAAK,CAAC;YACvB,CAAC,CAAC,MAAM;cACNhC,UAAU,CAAC,kBAAkB,CAAC;YAChC,CAAC,SAAS;cACRJ,mBAAmB,CAAC,KAAK,CAAC;YAC5B;UACF,CAAE;UAAAyC,QAAA,EAAE1C,gBAAgB,GAAG,eAAe,GAAG;QAAe;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EACjErD,WAAW,CAACmE,MAAM,GAAG,CAAC,iBACrBrH,OAAA;UAAI8F,SAAS,EAAC,gBAAgB;UAAAE,QAAA,EAC3B9C,WAAW,CAACoE,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAAKxH,OAAA;YAAAgG,QAAA,EAAauB;UAAC,GAALC,CAAC;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EAEL/C,SAAS,iBACRxD,OAAA;MAAK8F,SAAS,EAAC,YAAY;MAAAE,QAAA,eACzBhG,OAAA;QAAK8F,SAAS,EAAC,eAAe;QAAAE,QAAA,EAAC;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrG,EAAA,CAvVuBD,SAAS;EAAA,QACdH,WAAW;AAAA;AAAA2H,EAAA,GADNxH,SAAS;AAAA,IAAAwH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}